 /********************************************************************************************************************************
* Description: 	OMIS extract - Mosaiq - CCLHD
* Version:	1.2
* Author:	Joshua Herden (Based on William Su Script).
* 
****Dates******
Are designed to filter based on the completed date cycle = ( pharmacy_administration.Adm_DtTm + (CPlan.Cycle_Length - isnull(CPItem.Day_Offset,0)) - 1) AS End_DtTm1.
practically this means is a cycle is started at the end of the month 30/3 but the length is 14 days it will not be included till the following month 30/3+14days.
*
******Query Overview ******
There are three main queries
1. #omis initial query to gather initial information
2. #omis updates - logic that updates the #omis query 
3. #omis_final - contain the final corrected values - there are extract rows in the #omis table 
4. The final select statement on #omis_final returns the appropriate rows and formats.
*
*
****Updates *****
* 20180824: Initial, copy of NSLHD as of 20210209 - Mapping Tables updated. 
* 20220101	Setup as EndDtTm1
*			PatCPlan.Discontinue_DtTm >= Convert(Date,CycleEffDate.Start_DtTm1)
*			Removed --( care_plan_activity.Type1 & 1 = 1   or  care_plan_activity.Type1 & 4 = 4) as not used by site.
*			Removed Debug audit functionality for OLD specs
*			All EVIQ and NON EVIQ Drugs included.
*20220331	OMISDrugName is not null added to remove blank drug rows.
*20220505	Added fallback for missing Facility to Gosford (should only occur for patient administered from ward with no other appts in MOSAIQ)
**********************************************************************************************************************************/
--use [MOSAIQREPORT]
--go 
 
declare @startdate date, @enddate date, @debug char(1), @hospital varchar(20) , @QA char(1), @showheader varchar(1)
-- ,@hosp_code varchar(10), @deptcode varchar(10), @facicode varchar(10), @dt varchar(25)

set @startdate =  '&[ReportingStartDate]&'	-- start of month
set @enddate =  '&[ReportingEndDate]&'		-- end of month
set @QA = 'n'					-- Y = show real dates, N = DDMMYYYY
set @showheader = 'n'				-- Y = show file name, N = omit file name 
--set @hospital = ''				-- Commented out.

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET nocount on
SET ANSI_WARNINGS OFF
 
/*
select  @deptcode = Department_OID  , @facicode = pager  from config where Inst_Abrv = @hospital	-- Hospital code: A212 
if @showheader = 'Y'
begin
	set @dt = right('0'+cast(datepart(d, getdate()) as varchar(2)),2)+right('0'+cast(datepart(m, getdate()) as varchar(2)),2)+right('0'+cast(datepart(yyyy, getdate()) as varchar(4)),4)+right('0'+cast(datepart(hh, getdate()) as varchar(2)),2)+right('0'+cast(datepart(mi, getdate()) as varchar(2)),2) 
	select 'MEDONC_'+rtrim(Department_OID)+'_'+@dt+'.csv' as Output_File_Name
	from config with (nolock)
	where Inst_Abrv = @hospital
end
if  @enddate > cast(getdate() as date)
  set @enddate = dateadd(d,1,cast(getdate() as date))
 */

set @debug = @QA
declare @countries table (code int, name varchar(200))
declare @states table (code varchar(3), name varchar(200))
declare @indigenious table (code varchar(3), name varchar(200))
declare @cancerdiagnosis table (code varchar(3), name varchar(200))
declare @laterality table (code varchar(3), name varchar(200))
declare @episodeintent table (code varchar(3), name varchar(200))
declare @drugadminroute table (code int, name int)
declare @stagegroup table (code varchar(20), name varchar(20))
declare @otherstagegroup table (code varchar(20), schemename varchar(10), groupname varchar(20))
declare @custom_careplan_remap2 table (code int, name varchar(30))
declare @custom_careplan_remap table (code int, name varchar(30))

 
insert into @custom_careplan_remap (code, name)
select distinct code, name from @custom_careplan_remap2

-- No changes
insert into @otherstagegroup values ('2E','9','IIE')
insert into @otherstagegroup values ('4AE','9','IVAE')
insert into @otherstagegroup values ('EXT','8','Extensive')
insert into @otherstagegroup values ('EXTENSIVE','8','Extensive')
insert into @otherstagegroup values ('IAE','9','IAE')
insert into @otherstagegroup values ('IE','9','IE')
insert into @otherstagegroup values ('IIIS','9','IIIS ')
insert into @otherstagegroup values ('LIM','8','Limited')
insert into @otherstagegroup values ('Stage 2E','9','IIE')


-- No changes
insert into @stagegroup values ('0','0')
insert into @stagegroup values ('1','I')
insert into @stagegroup values ('2','II')
insert into @stagegroup values ('3','III')
insert into @stagegroup values ('4','IV')
insert into @stagegroup values ('0a','0a')
insert into @stagegroup values ('0is','0is')
insert into @stagegroup values ('1A','IA')
insert into @stagegroup values ('2a','IIA')
insert into @stagegroup values ('2B','IIB')
insert into @stagegroup values ('3A','IIIA')
insert into @stagegroup values ('3C','IIIC')
insert into @stagegroup values ('4a','IVA')
insert into @stagegroup values ('4X','IV')
insert into @stagegroup values ('I','I')
insert into @stagegroup values ('IA','IA')
insert into @stagegroup values ('IA1','IA1')
insert into @stagegroup values ('IA2','IA2')
insert into @stagegroup values ('IB','IB')
insert into @stagegroup values ('IB1','IB1')
insert into @stagegroup values ('IB2','IB2')
insert into @stagegroup values ('IC','IC')
insert into @stagegroup values ('II','II')
insert into @stagegroup values ('IIA','IIA')
insert into @stagegroup values ('IIA1','IIA1')
insert into @stagegroup values ('IIA2','IIA2')
insert into @stagegroup values ('IIB','IIB')
insert into @stagegroup values ('IIC','IIC')
insert into @stagegroup values ('III','III')
insert into @stagegroup values ('IIIA','IIIA')
insert into @stagegroup values ('IIIB','IIIB')
insert into @stagegroup values ('IIIC','IIIC')
insert into @stagegroup values ('IIIC1','IIIC1')
insert into @stagegroup values ('IIIC2','IIIC2')
insert into @stagegroup values ('IIINOS','III')
insert into @stagegroup values ('IINOS','II')
insert into @stagegroup values ('INOS','I')
insert into @stagegroup values ('IS','IS')
insert into @stagegroup values ('IV','IV')
insert into @stagegroup values ('IV B','IVB')
insert into @stagegroup values ('IVA','IVA')
insert into @stagegroup values ('IVB','IVB')
insert into @stagegroup values ('IVC','IVC')
insert into @stagegroup values ('IVNOS','IV')
insert into @stagegroup values ('Not Applicable','Not Applicable')
insert into @stagegroup values ('Occult Carcinoma','Occult Carcinoma')
insert into @stagegroup values ('Unknown','Unknown')
insert into @stagegroup values ('Unstaged','Unstaged')
insert into @stagegroup values ('REVIEW','REVIEW')


-- update 20220302
insert into @drugadminroute values (1,7031)           --CIV                           
insert into @drugadminroute values (13,707)           --Oral.
insert into @drugadminroute values (99,25201)           --Reminder
insert into @drugadminroute values (3,15901)           --Injection
insert into @drugadminroute values (13,7115)           --Oral                          
insert into @drugadminroute values (98,15988)           --Intraventricular
insert into @drugadminroute values (7,11453)           --Intravesical                  
insert into @drugadminroute values (9,10715)           --IVPush
insert into @drugadminroute values (8,3883)           --IV                            
insert into @drugadminroute values (18,2876)           --Subcut
insert into @drugadminroute values (6,7013)           --Intrathecal
insert into @drugadminroute values (2,6515)           --IM                            


 
-- update 20220302
insert into @episodeintent values ('9', 'BMT Regimen' )
insert into @episodeintent values ('21', 'Curative - Adjuvant' )
insert into @episodeintent values ('9', 'Other, NOS' )
insert into @episodeintent values ('1', 'Long term Ctrl/Maint' )
insert into @episodeintent values ('2', 'Induction-Primary' )
insert into @episodeintent values ('3', 'Supportive Care' )
insert into @episodeintent values ('2', 'Consolidation' )
insert into @episodeintent values ('2', 'Curative - Other' )
insert into @episodeintent values ('3', 'Palliative' )
insert into @episodeintent values ('3', 'Non - Curative' )
insert into @episodeintent values ('22', 'Curative-Neoadjuvant' )
insert into @episodeintent values ('9', 'Other Haematology' )
insert into @episodeintent values ('3', 'Palliative (other)' )
insert into @episodeintent values ('2', 'Curative' )
insert into @episodeintent values ('1', 'Maintenance' )
insert into @episodeintent values ('21', 'Curative (adjuvant)' )
insert into @episodeintent values ('9', 'De-Bulking' )
insert into @episodeintent values ('2', 'Induction' )
insert into @episodeintent values ('2', 'Curative (primary)' )
insert into @episodeintent values ('2', 'Chemoradiation' )
insert into @episodeintent values ('2', 'Transplant' )
insert into @episodeintent values ('1', 'Prophylactic' )

 
-- update 20220302
insert into @laterality values (3, 'Bilateral - Simultan' )
insert into @laterality values (2, '1 - Right' )
insert into @laterality values (3, '0 - Not paired' )
insert into @laterality values (2, 'R shoulder primary' )
insert into @laterality values (2, 'Right' )
insert into @laterality values (1, '2 - Left' )
insert into @laterality values (1, 'Left' )
insert into @laterality values (1, '2 - Left - origin of' )
insert into @laterality values (2, '1 - Right - origin o' )
insert into @laterality values (9, '' )
insert into @laterality values (9, '9 - Unknown side' )
insert into @laterality values (3, '4 - Bilateral' )


-- update 20220302
insert into @cancerdiagnosis values (9, '' )
insert into @cancerdiagnosis values (1, 'Clinical diagnosis  ' )
insert into @cancerdiagnosis values (1, 'Direct visualization' )
insert into @cancerdiagnosis values (5, 'Exfoliative cytology' )
insert into @cancerdiagnosis values (8, 'Histology           ' )
insert into @cancerdiagnosis values (4, 'Lab or marker study ' )
insert into @cancerdiagnosis values (8, 'Microscopic confirm ' )
insert into @cancerdiagnosis values (2, 'Radiography         ' )
insert into @cancerdiagnosis values (9, 'Unknown             ' )


-- update 20220302
insert into @indigenious values (9, 'Unknown             ' )
insert into @indigenious values (4, 'Neither Ab''l & TSI  ' )
insert into @indigenious values (3, 'Both Ab''l & TSI     ' )
insert into @indigenious values (8, 'Declined to Respond ' )
insert into @indigenious values (2, 'Torres Strait Island' )
insert into @indigenious values (1, 'Aboriginal Origin   ' )



-- update 20220302
insert into @states values (0, 'CD:554923758' )
insert into @states values (99, 'UNK' )
insert into @states values (3, 'QLD' )
insert into @states values (2, 'VIC' )
insert into @states values (1, 'NSW' )
insert into @states values (0, 'CD:5421630' )
insert into @states values (7, 'NT' )
insert into @states values (99, 'NFD' )
insert into @states values (99, '' )
insert into @states values (8, 'ACT' )
insert into @states values (6, 'TAS' )
insert into @states values (98, 'CENTRAL COAST' )
insert into @states values (0, 'CD:67185' )
insert into @states values (0, 'OS' )
insert into @states values (99, 'NFA' )
insert into @states values (4, 'SA' )
insert into @states values (99, 'Region' )
insert into @states values (5, 'WA' )



-- No changes
insert into @countries values (4,'0')
insert into @countries values (1,'At Sea')
insert into @countries values (3,'Not Stated')
insert into @countries values (4,'Unknown')
insert into @countries values (5,'Unidentified')
insert into @countries values (911,'Europe')
insert into @countries values (912,'USSR - former')
insert into @countries values (913,'Former Yugoslavia')
insert into @countries values (914,'Czechoslovakia')
insert into @countries values (915,'Kurdistan')
insert into @countries values (916,'East Asia')
insert into @countries values (917,'Asia')
insert into @countries values (918,'Africa')
insert into @countries values (921,'Serbia and Montenegro')
insert into @countries values (1000,'Oceania and Antarctica')
insert into @countries values (1100,'Australia (incl External Ter)')
insert into @countries values (1101,'Australia')
insert into @countries values (1102,'Norfolk Island')
insert into @countries values (1199,'Australian External Territories nec')
insert into @countries values (1201,'New Zealand')
insert into @countries values (1300,'Melanesia')
insert into @countries values (1301,'New Caledonia')
insert into @countries values (1302,'Papua New Guinea')
insert into @countries values (1303,'Solomon Islands')
insert into @countries values (1304,'Vanuatu')
insert into @countries values (1400,'Micronesia')
insert into @countries values (1401,'Guam')
insert into @countries values (1402,'Kiribati')
insert into @countries values (1403,'Marshall Islands')
insert into @countries values (1404,'Micronesia Federated States of')
insert into @countries values (1405,'Nauru')
insert into @countries values (1406,'Northern Mariana Islands')
insert into @countries values (1407,'Palau')
insert into @countries values (1500,'Polynesia (excludes Hawaii)')
insert into @countries values (1501,'Cook Islands')
insert into @countries values (1502,'Fiji')
insert into @countries values (1503,'French Polynesia')
insert into @countries values (1504,'Niue')
insert into @countries values (1505,'Samoa')
insert into @countries values (1506,'Samoa American')
insert into @countries values (1507,'Tokelau')
insert into @countries values (1508,'Tonga')
insert into @countries values (1511,'Tuvalu')
insert into @countries values (1512,'Wallis and Futuna')
insert into @countries values (1599,'Polynesia (not Hawaii) nec')
insert into @countries values (1600,'Antarctica')
insert into @countries values (1601,'Antarctica Adelie Land (France)')
insert into @countries values (1602,'Antarctica Argentinian Territory')
insert into @countries values (1603,'Antarctica Australian Territory')
insert into @countries values (1604,'Antarctica British Territory')
insert into @countries values (1605,'Antarctica Chilean Territory')
insert into @countries values (1606,'Queen Maud Land (Norway)')
insert into @countries values (1607,'Ross Dependency (New Zealand)')
insert into @countries values (2000,'North-West Europe')
insert into @countries values (2100,'United Kingdom')
insert into @countries values (2101,'Channel Islands')
insert into @countries values (2102,'England')
insert into @countries values (2103,'Isle of Man')
insert into @countries values (2104,'Northern Ireland')
insert into @countries values (2105,'Scotland')
insert into @countries values (2106,'Wales')
--insert into @countries values (2200,'Ireland')
insert into @countries values (2201,'Ireland')
insert into @countries values (2300,'Western Europe')
insert into @countries values (2301,'Austria')
insert into @countries values (2302,'Belgium')
insert into @countries values (2303,'France')
insert into @countries values (2304,'Germany')
insert into @countries values (2305,'Liechtenstein')
insert into @countries values (2306,'Luxembourg')
insert into @countries values (2307,'Monaco')
insert into @countries values (2308,'Netherlands')
insert into @countries values (2311,'Switzerland')
insert into @countries values (2400,'Northern Europe')
insert into @countries values (2401,'Denmark')
insert into @countries values (2402,'Faeroe Islands')
insert into @countries values (2403,'Finland')
insert into @countries values (2404,'Greenland')
insert into @countries values (2405,'Iceland')
insert into @countries values (2406,'Norway')
insert into @countries values (2407,'Sweden')
insert into @countries values (3000,'Southern and Eastern Europe')
insert into @countries values (3100,'Southern Europe')
insert into @countries values (3101,'Andorra')
insert into @countries values (3102,'Gibraltar')
insert into @countries values (3103,'Holy See')
insert into @countries values (3104,'Italy')
insert into @countries values (3105,'Malta')
insert into @countries values (3106,'Portugal')
insert into @countries values (3107,'San Marino')
insert into @countries values (3108,'Spain')
insert into @countries values (3200,'South Eastern Europe')
insert into @countries values (3201,'Albania')
insert into @countries values (3202,'Bosnia and Herzegovina')
insert into @countries values (3203,'Bulgaria')
insert into @countries values (3204,'Croatia')
insert into @countries values (3205,'Cyprus')
insert into @countries values (3206,'Macedonia (FYROM)')
insert into @countries values (3207,'Greece')
insert into @countries values (3208,'Moldova')
insert into @countries values (3211,'Romania')
insert into @countries values (3212,'Slovenia')
insert into @countries values (3214,'Montenegro')
insert into @countries values (3215,'Serbia')
insert into @countries values (3300,'Eastern Europe')
insert into @countries values (3301,'Belarus')
insert into @countries values (3302,'Czech Republic')
insert into @countries values (3303,'Estonia')
insert into @countries values (3304,'Hungary')
insert into @countries values (3305,'Latvia')
insert into @countries values (3306,'Lithuania')
insert into @countries values (3307,'Poland')
insert into @countries values (3308,'Russia')
insert into @countries values (3311,'Slovakia')
insert into @countries values (3312,'Ukraine')
insert into @countries values (4000,'Nth Africa & Middle East')
insert into @countries values (4100,'North Africa')
insert into @countries values (4101,'Algeria')
insert into @countries values (4102,'Egypt')
insert into @countries values (4103,'Libya')
insert into @countries values (4104,'Morocco')
insert into @countries values (4105,'Sudan')
insert into @countries values (4106,'Tunisia')
insert into @countries values (4107,'Western Sahara')
insert into @countries values (4199,'North Africa nec')
insert into @countries values (4200,'Middle East')
insert into @countries values (4201,'Bahrain')
insert into @countries values (4202,'Gaza Strip and West Bank')
insert into @countries values (4203,'Iran')
insert into @countries values (4204,'Iraq')
insert into @countries values (4205,'Israel')
insert into @countries values (4206,'Jordan')
insert into @countries values (4207,'Kuwait')
insert into @countries values (4208,'Lebanon')
insert into @countries values (4211,'Oman')
insert into @countries values (4212,'Qatar')
insert into @countries values (4213,'Saudi Arabia')
insert into @countries values (4214,'Syria')
insert into @countries values (4215,'Turkey')
insert into @countries values (4216,'United Arab Emirates')
insert into @countries values (4217,'Yemen')
insert into @countries values (5000,'South-East Asia')
insert into @countries values (5100,'Mainland Sth-East Asia')
insert into @countries values (5101,'Burma (Myanmar)')
insert into @countries values (5102,'Cambodia')
insert into @countries values (5103,'Laos')
insert into @countries values (5104,'Thailand')
insert into @countries values (5105,'Vietnam')
insert into @countries values (5200,'Maritime Sth-East Asia')
insert into @countries values (5201,'Brunei Darussalam')
insert into @countries values (5202,'Indonesia')
insert into @countries values (5203,'Malaysia')
insert into @countries values (5204,'Philippines')
insert into @countries values (5205,'Singapore')
insert into @countries values (5206,'East Timor')
insert into @countries values (6000,'North-East Asia')
insert into @countries values (6100,'Chinese Asia (incl Mongolia)')
insert into @countries values (6101,'China (excl SARs and Taiwan)')
insert into @countries values (6102,'Hong Kong (SAR of China)')
insert into @countries values (6103,'Macau (SAR of China)')
insert into @countries values (6104,'Mongolia')
insert into @countries values (6105,'Taiwan')
insert into @countries values (6200,'Japan and the Koreas')
insert into @countries values (6201,'Japan')
insert into @countries values (6202,'Korea North')
insert into @countries values (6203,'Korea South')
insert into @countries values (7000,'Southern and Central Asia')
insert into @countries values (7100,'Southern Asia')
insert into @countries values (7101,'Bangladesh')
insert into @countries values (7102,'Bhutan')
insert into @countries values (7103,'India')
insert into @countries values (7104,'Maldives')
insert into @countries values (7105,'Nepal')
insert into @countries values (7106,'Pakistan')
insert into @countries values (7107,'Sri Lanka')
insert into @countries values (7200,'Central Asia')
insert into @countries values (7201,'Afghanistan')
insert into @countries values (7202,'Armenia')
insert into @countries values (7203,'Azerbaijan')
insert into @countries values (7204,'Georgia')
insert into @countries values (7205,'Kazakhstan')
insert into @countries values (7206,'Kyrgyz Republic')
insert into @countries values (7207,'Tajikistan')
insert into @countries values (7208,'Turkmenistan')
insert into @countries values (7211,'Uzbekistan')
insert into @countries values (8000,'Americas')
insert into @countries values (8100,'Northern America')
insert into @countries values (8101,'Bermuda')
insert into @countries values (8102,'Canada')
insert into @countries values (8103,'St Pierre and Miquelon')
insert into @countries values (8104,'United States of America')
insert into @countries values (8200,'South America')
insert into @countries values (8201,'Argentina')
insert into @countries values (8202,'Bolivia')
insert into @countries values (8203,'Brazil')
insert into @countries values (8204,'Chile')
insert into @countries values (8205,'Colombia')
insert into @countries values (8206,'Ecuador')
insert into @countries values (8207,'Falkland Islands')
insert into @countries values (8208,'French Guiana')
insert into @countries values (8211,'Guyana')
insert into @countries values (8212,'Paraguay')
insert into @countries values (8213,'Peru')
insert into @countries values (8214,'Suriname')
insert into @countries values (8215,'Uruguay')
insert into @countries values (8216,'Venezuela')
insert into @countries values (8299,'South America nec')
insert into @countries values (8300,'Central America')
insert into @countries values (8301,'Belize')
insert into @countries values (8302,'Costa Rica')
insert into @countries values (8303,'El Salvador')
insert into @countries values (8304,'Guatemala')
insert into @countries values (8305,'Honduras')
insert into @countries values (8306,'Mexico')
insert into @countries values (8307,'Nicaragua')
insert into @countries values (8308,'Panama')
insert into @countries values (8400,'Caribbean')
insert into @countries values (8401,'Anguilla')
insert into @countries values (8402,'Antigua and Barbuda')
insert into @countries values (8403,'Aruba')
insert into @countries values (8404,'Bahamas')
insert into @countries values (8405,'Barbados')
insert into @countries values (8406,'Cayman Islands')
insert into @countries values (8407,'Cuba')
insert into @countries values (8408,'Dominica')
insert into @countries values (8411,'Dominican Republic')
insert into @countries values (8412,'Grenada')
insert into @countries values (8413,'Guadeloupe')
insert into @countries values (8414,'Haiti')
insert into @countries values (8415,'Jamaica')
insert into @countries values (8416,'Martinique')
insert into @countries values (8417,'Montserrat')
insert into @countries values (8418,'Netherlands Antilles')
insert into @countries values (8421,'Puerto Rico')
insert into @countries values (8422,'St Kitts and Nevis')
insert into @countries values (8423,'St Lucia')
insert into @countries values (8424,'St Vincent and the Grenadines')
insert into @countries values (8425,'Trinidad and Tobago')
insert into @countries values (8426,'Turks and Caicos Islands')
insert into @countries values (8427,'Virgin Islands British')
insert into @countries values (8428,'Virgin Islands United States')
insert into @countries values (9000,'Sub-Saharan Africa')
insert into @countries values (9100,'Central and West Africa')
insert into @countries values (9101,'Benin')
insert into @countries values (9102,'Burkina Faso')
insert into @countries values (9103,'Cameroon')
insert into @countries values (9104,'Cape Verdi')
insert into @countries values (9105,'Central African Republic')
insert into @countries values (9106,'Chad')
insert into @countries values (9107,'Congo')
insert into @countries values (9108,'Congo Democratic Republic of')
insert into @countries values (9111,'Cote d''Ivoire')
insert into @countries values (9112,'Equatorial Guinea')
insert into @countries values (9113,'Gabon')
insert into @countries values (9114,'Gambia')
insert into @countries values (9115,'Ghana')
insert into @countries values (9116,'Guinea')
insert into @countries values (9117,'Guinea Bissau')
insert into @countries values (9118,'Liberia')
insert into @countries values (9121,'Mali')
insert into @countries values (9122,'Mauritania')
insert into @countries values (9123,'Niger')
insert into @countries values (9124,'Nigeria')
insert into @countries values (9125,'Sao Tome and Principe')
insert into @countries values (9126,'Senegal')
insert into @countries values (9127,'Sierra Leone')
insert into @countries values (9128,'Togo')
insert into @countries values (9200,'Southern and East Africa')
insert into @countries values (9201,'Angola')
insert into @countries values (9202,'Botswana')
insert into @countries values (9203,'Burundi')
insert into @countries values (9204,'Comoros')
insert into @countries values (9205,'Djibouti')
insert into @countries values (9206,'Eritrea')
insert into @countries values (9207,'Ethiopia')
insert into @countries values (9208,'Kenya')
insert into @countries values (9211,'Lesotho')
insert into @countries values (9212,'Madagascar')
insert into @countries values (9213,'Malawi')
insert into @countries values (9214,'Mauritius')
insert into @countries values (9215,'Mayotte')
insert into @countries values (9216,'Mozambique')
insert into @countries values (9217,'Namibia')
insert into @countries values (9218,'Reunion')
insert into @countries values (9221,'Rwanda')
insert into @countries values (9222,'St Helena')
insert into @countries values (9223,'Seychelles')
insert into @countries values (9224,'Somalia')
insert into @countries values (9225,'South Africa')
insert into @countries values (9226,'Swaziland')
insert into @countries values (9227,'Tanzania')
insert into @countries values (9228,'Uganda')
insert into @countries values (9231,'Zambia')
insert into @countries values (9232,'Zimbabwe')
insert into @countries values (9299,'Africa South and East')
insert into @countries values (922,'0922 Channel Islands, nfd')
insert into @countries values (924,'0924 Netherlands Antilles, nfd')
insert into @countries values (1513,'1513 Pitcairn Islands')
insert into @countries values (2107,'2107 Guernsey')
insert into @countries values (2108,'2108 Jersey')
insert into @countries values (2408,'2408 Aland Islands')
insert into @countries values (3216,'3216 Kosovo')
insert into @countries values (4108,'4108 Spanish North Africa')
insert into @countries values (4111,'4111 South Sudan')
insert into @countries values (8431,'8431 St Barthelemy')
insert into @countries values (8432,'8432 St Martin (French part)')
insert into @countries values (8433,'8433 Bonaire, Sint Eustatius and Saba')
insert into @countries values (8434,'8434 Curacao')
insert into @countries values (8435,'8435 Sint Maarten (Dutch part)')
insert into @countries values (922,'Channel Islands, nfd')
insert into @countries values (924,'Netherlands Antilles, nfd')
insert into @countries values (1513,'Pitcairn Islands')
insert into @countries values (2107,'Guernsey')
insert into @countries values (2108,'Jersey')
insert into @countries values (2408,'Aland Islands')
insert into @countries values (3216,'Kosovo')
insert into @countries values (4108,'Spanish North Africa')
insert into @countries values (4111,'South Sudan')
insert into @countries values (8431,'St Barthelemy')
insert into @countries values (8432,'St Martin (French part)')
insert into @countries values (8433,'Bonaire, Sint Eustatius and Saba')
insert into @countries values (8434,'Curacao')
insert into @countries values (8435,'Sint Maarten (Dutch part)')
insert into @countries values (1,'0001')
insert into @countries values (4,'0004')
insert into @countries values (913,'0913')
insert into @countries values (918,'0918')
insert into @countries values (921,'0921')
insert into @countries values (6101,'China(excludes SARs and Taiwan Province)')
insert into @countries values (8206,'Equador')
insert into @countries values (6202,'Korea, Democratic People''s Republic of')
insert into @countries values (6203,'Korea, Republic of (South)')
insert into @countries values (3308,'Russian Federation')
insert into @countries values (913,'The Former Yugoslav Republicof Macedonia')
insert into @countries values (2100,'United Kingdom, nfd')
insert into @countries values (5105,'Viet Nam')
insert into @countries values (8428,'Virgin Islands, United States')


if object_id('tempdb..#omis') is not null
 drop table #omis
if object_id('tempdb..#omis_final') is not null
 drop table #omis_final

 

SELECT DISTINCT TreatmentEvents.Pat_ID1,
	TreatmentEvents.PCP_GROUP_ID AS GroupID, 
    Demographics.SS_Number          AS MedicareNumber,			-- 001 medicare number
	TreatmentEvents.Inst_Abrv as HospitalCode, 
	ident_partial.IDA AS MRN, 
	ident_partial.IDB AS [UniqueIdentifier],    --AUID,  -- 003 patient area unique identifier
	Demographics.First_Name         AS GivenName1,   -- 004 first given name
    case when len(Demographics.Middle_Name) < 2 then null else replace(Demographics.Middle_Name,',',' ') end  AS GivenName2,   -- 005 second given name
    Demographics.Last_Name          AS Surname, 
	NULL                            AS AliasSurname,	-- 007 alias surname
    --replace(Demographics.Alias_Name,',',' ')  AS AliasSurname,	-- 007 alias surname
    case Demographics.Gender when 'M' then 1
		when 'Male' then 1
		when 'F' then 2
		when 'Female' then 2 
		when 'Indetermin' then 3
		when 'Unknown' then 9
		else 9
	end as   Sex,
    cast( Demographics.Birth_DtTm as date) AS DateOfBirth, 
	replace(Demographics.Birth_Place,',','')        AS Birth_Place_original, 
	replace(isnull(Demographics.Birth_Place_SACC,3),',',' ')        AS COBCodeSACC,   -- Demographics.Birth_Place        AS Birth_Place 
    replace((Demographics.Pat_Adr1 +' '+ Demographics.Pat_Adr2),',',' ') AS WayfareAddress,  -- UsualResidentialAddress,
    replace(Demographics.Pat_City,',',' ')           AS Locality,
    replace(Demographics.Pat_Postal,',','')         AS Postcode,
	Demographics.Pat_State          AS WayfareStateID_original,
	Demographics.Pat_State_code          AS WayfareStateID,
	Demographics.indigenous_status               AS IndigenousStatusID_original,
	isnull(indigenious.code,9) as IndigenousStatusID, 
	staff_details.OncAHPRA	 AS AmoRegReferringNumber,    -- oncologist
	staff_details.OncName      AS DoctorName,			 -- oncologist
	--TreatmentEvents.address1 + ', ' + TreatmentEvents.address2 + ', ' + TreatmentEvents.locality + ', ' + TreatmentEvents.State_Province + ' ' + TreatmentEvents.Postal AS AddressOnc, 
    TreatmentEvents.Department_OID         AS TreatingFacilityCode,  -- HospitalID,     -- Hospital number      /* User Defined Entries (Location Not Decided Yet)*/ 
    TreatmentEvents.Pager           AS FacilityCode,   -- DepartmentID,   	-- 030 cancer department number        /* User Defined Entries (Location Not Decided Yet)*/ 
    cast( MedicalRecords.Dx_DtTm1 as date)   AS	DateOfDiagnosis,	 --   convert(varchar(10), isnull(MedicalRecords.Dx_DtTm1,null),103)         	 -- PrimaryDiagnosisDate, 
	
    CASE 
		 -- WHEN MedicalRecords.Diag_Code LIKE 'WH%' THEN MedicalRecords.User_Code 
         -- WHEN MedicalRecords.User_Code IS NULL    THEN MedicalRecords.Diag_Code 
		 WHEN MedicalRecords.Topography1 LIKE 'WH%' THEN MedicalRecords.User_Code1 
		 ELSE  MedicalRecords.Topography1

    END AS CancerSiteCodeID,		-- PrimarySiteOfCancerCode,   
    CASE WHEN MedicalRecords.Diag_Type1 = 4 THEN 'ICD10'-- TODO confirm this
		WHEN (MedicalRecords.Diag_Type1 = 2 OR MedicalRecords.Topography1 LIKE 'WH%' )
											THEN (case when MedicalRecords.Diag_DtTm1 between '01-Jul-1998' and '30-Jun-2000' then 'ICD10V1'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2000' and '30-Jun-2002' then 'ICD10V2'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2002' and '30-Jun-2004' then 'ICD10V3'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2004' and '30-Jun-2006' then 'ICD10V4'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2006' and '30-Jun-2008' then 'ICD10V5'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2008' and '30-Jun-2010' then 'ICD10V6'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2010' and '30-Jun-2013' then 'ICD10V7'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2013' and '30-Jun-2015' then 'ICD10V8'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2015' and '30-Jun-2017' then 'ICD10V9'
													when MedicalRecords.Diag_DtTm1 between '01-Jul-2017' and '30-Jun-2019'  then 'ICD10V10' 
													when MedicalRecords.Diag_DtTm1 >= '01-Jul-2019'  then 'ICD10V11' 
													else null end )
		ELSE 'ICD10V9'
	END AS CancerSiteCodeIDVersion,   ---PrimarySiteOfCancerVersion, --(MOSAIQ>=2.41)  
    CASE WHEN MedicalRecords.Histology is not null  THEN 'ICDO3' -- TODO confirm this    -- and MedicalRecords.Diag_Type1 in (2,4)
		ELSE NULL
	END AS MorphologyCodeIDVersion,   ---PrimarySiteOfCancerVersion, --(MOSAIQ>=2.41)  
	MedicalRecords.Diag_Confirm1     AS BestBasisOfDiagnosisID_original,  
	cancerdiagnosis.code as BestBasisOfDiagnosisID,
	MedicalRecords.Paired_Organ     AS Laterality_original,	-- 035 laterality of primary cancer
	laterality.code as Laterality,
	case isnumeric(MedicalRecords.Hist_Grade) when 1 then MedicalRecords.Hist_Grade else 9 end   AS HistopathologicalGradeID,	-- 036 histopathalogical grade 
    MedicalRecords.Histology        AS MorphologyCodeID,	-- 037 morphology code       --'ICDO3'  AS MorphologyCodeVersion, 
	9 AS DegreeOfSpreadID,		-- if Medical.Dist_Mets_1 != '' then 4  else 9    -- 9 = unknown

	coalesce(staging.date_staged_dttm, staging.Dx_DtTm1 ,staging.edit_dttm)    AS TNMStagingDate,
	staging.T_Stage1          AS TStageID_original,
	staging.N_Stage1          AS NStageID_original,
	staging.M_Stage1          AS MStageID_original,
	staging.T_Stage1          AS TStageID,
	staging.N_Stage1          AS NStageID,
	staging.M_Stage1          AS MStageID,
	stagegroup.name    AS TNMStagingGroupID,
	staging.combined_stage    AS TNMStagingGroupID_original,
	case staging.StageType1 when 0 then 'C' when 1 then 'P' else null end  AS TNMStagingBasisID,
	case when otherstage.schemename is not null then coalesce(staging.date_staged_dttm, staging.Dx_DtTm1) else null end   AS OtherStagingDate,   --convert(varchar(10), isnull(everything.other_stage_DtTm ,'01-01-9999'),103)      AS OtherStagingDate,
	otherstage.schemename    AS OtherStagingSchemeID,
	otherstage.groupname     AS OtherStagingGroupID,	-- 059 other staging grouping code
	null     AS OtherStagingBasisID,
 
	TreatmentEvents.Tx_Intent    AS  EpisodeIntentID_original,  -- TreatmentReasonID,	-- 062 intention of treatment
	episodeintent.code as EpisodeIntentID,
	case TreatmentEvents.row when 1 then 1 else 2 end AS InitialTreatmentFlag,  --Indicator, 
    CASE WHEN first_admin.first_admin_date is not null	THEN cast(first_admin.first_admin_date as date)
		 --WHEN TreatmentEvents.DI_DtTm < TreatmentEvents.Start_Date	THEN cast(TreatmentEvents.DI_DtTm as date)
		 ELSE cast(TreatmentEvents.Start_Date as date) 
    END as EpisodeStartDate,  --SystemicTherapyStartDate,		-- 067 treatment start date
	--cast(first_admin.first_admin_date as date) as EpisodeStartDate, 
  --  CASE WHEN  last_admin.last_admin_date is not null THEN cast(last_admin.last_admin_date as date)
		--when TreatmentEvents.Discontinue_DtTm is not null then cast(TreatmentEvents.Discontinue_DtTm as date)
		--ELSE cast(TreatmentEvents.End_Date as date) 
  --  END  AS EpisodeEndDate,   -- SystemicTherapyEndDate,  	-- 068 treatment end date
	cast(last_admin.last_admin_date as date) AS EpisodeEndDate,
   -- CASE WHEN TreatmentEvents.Discontinue_DtTm IS NOT NULL and last_admin.last_admin_date is not null and cast(TreatmentEvents.Discontinue_DtTm as date) < cast(last_admin.last_admin_date as date) THEN TreatmentEvents.delivered_instances 
		 --else last_admin.last_cycle_number
   -- END  AS AntiNeoplasticCycles,   -- SystemicTherapyEndDate,  	-- 068 treatment end date
   last_admin.last_cycle_number  AS AntiNeoplasticCycles,
--	TreatmentEvents.delivered_instances   AS AntiNeoplasticCycles,   --SystemicTherapyCycles,
--	TreatmentEvents.Regimen         AS ProtocolID,   -- SystemicTherapyProtocolID, eviQ protocal ID
	case when charindex('v.',TreatmentEvents.regimen, 5) > 0 then substring(TreatmentEvents.regimen,1,charindex('v.',TreatmentEvents.regimen, 5)-2) else regimen end AS ProtocolID, 
    drugs.regimen_cycle_number   AS NotificationEpisodeChemoCycle,   --SystemicTherapyProtocolCycleNo,	-- 071 reported cycle number   , drug number
    --null   AS NotificationEpisodeChemoCycle,   --SystemicTherapyProtocolCycleNo,	-- 071 reported cycle number   , drug number
	drugs.drug_name        AS OMISDrugName,   --SystemicTherapyDrug,		-- 072 systemic therapy drug name 
	drugs.dose1             AS NotificationEpisodeChemoDose,   --SystemicTherapyDose,	-- 073 Dose 
	drugs.route            AS NotificationEpisodeChemoRouteID_original,   --SystemicTherapyRoute,	-- 074 Route 
	drugadminroute.code  AS NotificationEpisodeChemoRouteID,
	cast(drugs.start_date1 as date)  AS NotificationEpisodeChemoStartDate,   --SystemicTherapyStart, 
	cast(drugs.end_date1  as date)   AS NotificationEpisodeChemoEndDate,   --SystemicTherapyEnd, 
	drugs.frequency1        AS NotificationEpisodeChemoFrequency,   --SystemicTherapyFrequency, 
	drugs.frequency_unit   AS NotificationEpisodeChemoFrequencyUnit,   --SystemicTherapyFrequencyUnit,
	drugs.day_of_week      AS NotificationEpisodeChemoDay,   --SystemicTherapyDay,s
    cast(MedicalRecords.ReferralDate1  as date) AS ReferralDate,
    cast(MedicalRecords.Diag_DtTm1  as date)  AS ConsultationDate,
    cast(MedicalRecords.DtTm_Reg  as date)  AS ClinicalTrialDate,   --FirstClinicalTrialDate,
    cast(MedicalRecords.Trial_Short_Desc as varchar(100)) AS ClinicalTrialName,	--FirstClinicalTrialName,	-- 106 name of trial
    cast(MedicalRecords.Act_DtTm1 as date) AS MDTDate,	-- 107 date of MDT consultation 
    cast(MedicalRecords.PalativeDate as date)  AS ReferalToPalliativeCareDate,    --DateOfReferalToPalliativeCare, 
	cast(Assessment1.Obs_DtTm as date)  AS PerformanceStatusDate, 
    MAX(Assessment1.ecog_value) OVER (PARTITION BY Demographics.Pat_ID1,TreatmentEvents.Start_DtTm1) AS PerformanceStatus,
	TreatmentEvents.CPL_ID,
	TreatmentEvents.CPlan_Name,
	TreatmentEvents.Regimen, 
	last_admin.Cycle_Length as cycle_length,
	last_admin.last_cycle_number as last_cycle_number,
	last_admin.plan_status,
	last_admin.adm_status,
	last_admin.last_admin_date,
	cast(null as date) as calculated_end_date,
	cast( MedicalRecords.dx_record_Create_DtTm as date) as dx_record_Create_DtTm,
	cast( MedicalRecords.dx_record_Sanct_DtTm as date) as dx_record_Sanct_DtTm,
	cast( MedicalRecords.dx_record_Edit_DtTm as date) as dx_record_Edit_DtTm 
into #omis
FROM
-- in each part of the query we get the Patient Demographic data, as that has to remain constant, and combine it with one of the other queries.
-- the three non-used queries are saved as null
-- hopefully the database is smart enough to only run the Demographic query once.
( 
  (
/* ------------------------------ Treatment Events Query ---------------------------------------- */
		(SELECT DISTINCT patient_care_plan.PCP_ID, 
			patient_care_plan.Pat_ID1, 
			patient_care_plan.Med_ID, 
			patient_care_plan.MD_ID, 
			patient_care_plan.CPL_ID, 
			patient_care_plan.Tx_Intent, 
			initial_treatment.row,
			patient_care_plan.Protocol, 
			patient_care_plan.Chemo, 
			patient_care_plan.Hormone, 
			patient_care_plan.Immuno, 
			patient_care_plan.Start_DtTm1, 
			patient_care_plan.End_DtTm1,
			patient_care_plan.Discontinue_DtTm, 
			patient_care_plan.PCP_GROUP_ID, 
			patient_care_plan.delivered_instances,
			patient_care_plan.CPlan_Name, 
			patient_care_plan.Regimen, 
			patient_care_plan.Start_Date, 
			patient_care_plan.End_Date, 
			patient_care_plan.DI_DtTm, --patient_care_plan.End_DtTm1, --Debug
			TreatmentLocation.Inst_ID, 
			TreatmentLocation.Pager, 
			TreatmentLocation.Department_OID, 
			TreatmentLocation.Inst_Abrv,
			TreatmentLocation.address1, 
			TreatmentLocation.address2, 
			TreatmentLocation.locality, 
			TreatmentLocation.State_Province, 
			TreatmentLocation.Postal, 
			TreatmentLocation.Display_ID
		FROM 
		(SELECT PatCPlan.PCP_ID, 
				PatCPlan.Pat_ID1, 
				PatCPlan.Med_ID, 
				--PatCPlan.MD_ID,
				doctors_id.MD_ID,
				PatCPlan.CPL_ID, 
				PatCPlan.Tx_Intent,
				PatCPlan.Protocol, 
				PatCPlan.Chemo, 
				PatCPlan.Hormone, 
				PatCPlan.Immuno,
				CycleEffDate.Start_DtTm1, 
				CycleEffDate.End_DtTm1, 
				PatCPlan.Discontinue_DtTm, 
				CycleEffDate.Start_Date, 
				CycleEffDate.End_Date, 
				CycleEffDate.DI_DtTm, 
				care_plan1.CPlan_Name, 
				care_plan1.Regimen, 
				CycleEffDate.PCP_GROUP_ID,
				MAX(CycleEffDate.This_Instance) OVER (PARTITION BY CycleEffDate.PCP_GROUP_ID) AS delivered_instances
			FROM dbo.PatCPlan with (nolock)
			join 
			(SELECT DISTINCT RealDate.PCP_ID, 
					RealDate.PCP_GROUP_ID, 
					RealDate.DI_DtTm,
					RealDate.This_Instance,
					MIN(RealDate.Adm_DtTm) OVER (PARTITION BY RealDate.PCP_ID) AS Start_DtTm1, 
					MAX(RealDate.End_DtTm1) OVER (PARTITION BY RealDate.PCP_ID) AS End_DtTm1,
					MIN(RealDate.Adm_DtTm) OVER (PARTITION BY RealDate.PCP_GROUP_ID) AS Start_Date,
					MAX(RealDate.End_DtTm) OVER  (PARTITION BY RealDate.PCP_GROUP_ID) AS End_Date
				FROM
				(SELECT MIN(PatCPlan.Eff_DtTm) OVER (PARTITION BY PatCPlan.PCP_GROUP_ID) AS DI_DtTm
						, PatCPlan.PCP_GROUP_ID
						, PatCPlan.PCP_ID
						, PatCPlan.End_DtTm
						, PatCPlan.This_Instance
						, pharmacy_administration.Adm_DtTm
						--, CASE WHEN  dbo.fn_TestMask(care_plan_activity.Type1, 1) = 1 and  CPItem.Day_Offset is not null 
						--	THEN (pharmacy_administration.Adm_DtTm + (CPlan.Cycle_Length - CPItem.Day_Offset) - 1)
						--	ELSE (pharmacy_administration.Adm_DtTm + CPlan.Cycle_Length - 1) 
						--	END AS End_DtTm1
						, (pharmacy_administration.Adm_DtTm + (CPlan.Cycle_Length - isnull(CPItem.Day_Offset,0)) - 1) AS End_DtTm1
						--, CASE WHEN care_plan_activity.Type1 & 1 = 1 
						--	THEN pharmacy_administration.Adm_DtTm 
						--	END AS End_Date2
					FROM  dbo.PatCPlan with (nolock)
						INNER JOIN dbo.CPlan with (nolock) ON PatCPlan.CPL_ID = CPlan.CPL_ID 
						INNER JOIN dbo.Orders AS pharm_orders with (nolock) ON PatCPlan.Pat_ID1 = pharm_orders.Pat_ID1 and  pharm_orders.Cycle_Number IS NOT NULL --this will filter ordersets manually added.
							AND pharm_orders.Cycle_Day IS NOT NULL 
							AND pharm_orders.PCI_ID IS NOT NULL  
							AND pharm_orders.Version = 0 
							AND pharm_orders.Status_Enum NOT IN (1)
						INNER JOIN dbo.PharmAdm AS pharmacy_administration with (nolock) ON PatCPlan.Pat_ID1 = pharmacy_administration.Pat_ID1 AND pharm_orders.ORC_SET_ID = pharmacy_administration.ORC_SET_ID
							and  pharmacy_administration.Version = 0 
							AND pharmacy_administration.Adm_DtTm IS NOT NULL 
							AND pharmacy_administration.Status_Enum NOT IN (1)
						INNER JOIN PatCItem AS patient_care_item with (nolock) ON PatCPlan.Pat_ID1 = patient_care_item.Pat_ID1 AND patient_care_item.PCI_ID = pharm_orders.PCI_ID AND patient_care_item.PCP_ID = PatCPlan.PCP_ID
						LEFT OUTER JOIN CPItem with (nolock) ON patient_care_item.CPI_ID = CPItem.CPI_ID
						INNER JOIN CPAct AS care_plan_activity with (nolock) ON care_plan_activity.CPA_ID = pharm_orders.CPA_ID
						--	and ( care_plan_activity.Type1 & 1 = 1   or  care_plan_activity.Type1 & 4 = 4)


				) AS RealDate
			) AS CycleEffDate on PatCPlan.PCP_ID = CycleEffDate.PCP_ID	and (CONVERT(date,CycleEffDate.End_DtTm1) BETWEEN @startdate AND dateadd(d,1,@enddate))	--End_DtTm1		/* Start/End Date Of The Cycles & Protocols */                                
			join CPlan  AS care_plan1 on care_plan1.CPL_ID = PatCPlan.CPL_ID
			join (SELECT PCP_ID, PCP_Group_ID, MD_ID FROM PatCPlan with (nolock) where This_Instance = 1) AS doctors_id 
				on doctors_id.PCP_Group_ID = PatCPlan.PCP_Group_ID --AND doctors_id.PCP_ID = doctors_id.max_pcp_id
			WHERE (PatCPlan.Discontinue_DtTm IS NULL 
				OR PatCPlan.Discontinue_DtTm >= Convert(Date,CycleEffDate.Start_DtTm1))
				--and ((CycleEffDate.Start_Date <= CycleEffDate.End_Date) or (CycleEffDate.DI_DtTm <= CycleEffDate.End_Date) or CycleEffDate.End_Date is null)
				--and CycleEffDate.PCP_GROUP_ID in (138887,147323,182176,186988,190510,196018,202214,210225,224788,243999,244816,245573,249727,252714,265912,255720,261844)
		) AS patient_care_plan 
		LEFT OUTER JOIN 
				(SELECT attendance_table_2.Pat_ID1, 
					attendance_table_2.Inst_ID, 
					Config.Pager, 
					Config.Department_OID, 
					config.Inst_Abrv,
					RTRIM(Config.Adr1) AS address1, 
					RTRIM(Config.Adr2) AS address2, 
					RTRIM(Config.City) AS locality, 
					Config.State_Province, 
					Config.Postal, 
					Config.Display_ID 
				from (select Pat_ID1, Inst_ID, COUNT(Inst_ID) AS total, ROW_NUMBER() OVER (PARTITION BY Pat_ID1 ORDER BY COUNT(Inst_ID) DESC ) AS row
						FROM schedule with (nolock), Staff with (nolock)
						where Schedule.Suppressed =0 
							and Schedule.version = 0
							and Schedule.Location = Staff.Staff_ID
							and Schedule.ESI_Source = ''
						group by Pat_ID1, Inst_ID
					) AS attendance_table_2
					join Config with (nolock) on Config.Inst_ID = attendance_table_2.Inst_ID and attendance_table_2.row = 1 
			) AS TreatmentLocation ON TreatmentLocation.Pat_ID1 = patient_care_plan.Pat_ID1
		LEFT OUTER JOIN
		--(select *
		--from ( select PatCPlan.PCP_Group_ID
		--			,ROW_NUMBER() OVER (partition by CASE WHEN Medical.Diagnosis_Class in (5,2) AND Medical.Related_MED_ID is not NULL THEN Medical.Related_MED_ID ELSE Medical.MED_ID END order by PatCPlan.Eff_DtTm ASC) as row   -- initial treatment
		--			,min(PatCPlan.Eff_DtTm) OVER (partition by CASE WHEN Medical.Diagnosis_Class in (5,2) AND Medical.Related_MED_ID is not NULL THEN Medical.Related_MED_ID ELSE Medical.MED_ID END order by PatCPlan.Eff_DtTm ASC) as row2   -- initial treatment
		--		from PatCPlan
		--			join Medical on PatCPlan.MED_ID = Medical.MED_ID
		--			join CPlan on PatCPlan.CPL_ID = CPlan.CPL_ID
		--		where PatCPlan.PCP_ID = PatCPlan.PCP_Group_ID 
		--			AND CPlan.Intervention = 1  
		--	) AS iit
		--where row2 BETWEEN @startdate AND dateadd(d,1,@enddate)
		--(select PCP_Group_ID, 1 AS row  from patcplan where CPL_ID is not null group by PCP_Group_ID having max(PCP_Instances) = 1 -- ORDER BY PCP_Group_ID
		(select  PCP_Group_ID,  1 AS row  --p.Pat_ID1, p.MED_ID,
		from PatCPlan p  with (nolock)
			join (select p.Pat_ID1, p.MED_ID, min(p.Eff_DtTm) as Eff_DtTm
				from Medical m with (nolock)
					join PatCPlan p with (nolock) on m.MED_ID = p.MED_ID
					join CPlan c with (nolock) on p.CPL_ID = c.CPL_ID
				where m.Related_MED_ID is null
					and m.Diagnosis_Class = 1 
					and c.Intervention = 1
					and p.Status_Enum in (2,3,5,23)
				group by p.Pat_ID1, p.MED_ID
				--having  min(p.Eff_DtTm) between @startdate and dateadd(d,1,@enddate)
					) a on p.Pat_ID1 = a.Pat_ID1 and p.MED_ID = a.MED_ID and p.Eff_DtTm = a.Eff_DtTm 
		and p.Status_Enum in (2,3,5,23)
		) as initial_treatment ON initial_treatment.PCP_Group_ID = patient_care_plan.PCP_Group_ID --and initial_treatment.Pat_ID1 = patient_care_plan.Pat_ID1
	) AS TreatmentEvents 

	left join @episodeintent episodeintent on episodeintent.name = TreatmentEvents.Tx_Intent

	LEFT OUTER JOIN
	/* ------------------------------ Assessment Query --------------------------------------------- */
	(SELECT coalesce(PrePivotAssessment1.Pat_ID1,PrePivotAssessment2.Pat_ID1) as patient
		, PrePivotAssessment1.ChoiceValue AS ecog_value
		, PrePivotAssessment1.Obs_DtTm
		, PrePivotAssessment2.ChoiceValue AS Treatment_Outcome
		FROM 
		( SELECT observation_request.OBR_ID
				, observation_request.Pat_ID1
				, observation_definition.OBD_ID
				, observation_request.Obs_DtTm

				, observation_definition.Label
				, observation_definition2nd.Label AS ChoiceValue
				--, MAX(observation_definition2nd.ChoiceLabel) OVER (PARTITION BY observation_request.Pat_ID1,observation_definition.Label) AS RowNum
				, ROW_NUMBER() OVER (PARTITION BY observation_request.Pat_ID1,observation_definition.Label ORDER BY observation_definition2nd.Label DESC) AS RowNum
			FROM  Observe AS Observe1 with (nolock)
				INNER JOIN ObsDef AS observation_definition with (nolock) ON Observe1.OBD_ID = observation_definition.OBD_ID and observation_definition.Label in ('ECOG', 'Performance Status', 'Performance Status*')
				INNER JOIN ObsDef AS observation_definition2nd with (nolock) ON Observe1.Obs_Choice = observation_definition2nd.OBD_ID
				INNER JOIN ObsReq AS observation_request with (nolock) ON observation_request.Pat_ID1 = Observe1.Pat_ID1 AND observation_request.OBR_ID = Observe1.OBR_SET_ID and observation_request.Version = 0 AND observation_request.Status_Enum NOT IN (1)
			WHERE  CONVERT(date,observation_request.Obs_DtTm) between @startdate AND dateadd(d,1,@enddate)
		) AS PrePivotAssessment1
		FULL OUTER JOIN 
		(SELECT observation_request.OBR_ID
				, observation_request.Pat_ID1
				, observation_definition.OBD_ID
				, observation_request.Obs_DtTm
				, observation_definition.Label
				, observation_definition2nd.Label AS ChoiceValue
				, ROW_NUMBER() OVER (PARTITION BY observation_request.Pat_ID1,observation_definition.Label ORDER BY observation_definition2nd.Label DESC) AS RowNum
			FROM  Observe AS Observe1 with (nolock)
				INNER JOIN  ObsDef AS observation_definition with (nolock) ON Observe1.OBD_ID = observation_definition.OBD_ID and observation_definition.Label in ('Def / Neo [Ch&RT]', 'Palliative')
				INNER JOIN  ObsDef AS observation_definition2nd with (nolock) ON Observe1.Obs_Choice = observation_definition2nd.OBD_ID
				INNER JOIN  ObsReq AS observation_request with (nolock) ON observation_request.Pat_ID1 = Observe1.Pat_ID1 AND observation_request.OBR_ID = Observe1.OBR_SET_ID and  observation_request.Version = 0 AND observation_request.Status_Enum NOT IN (1)
			WHERE CONVERT(date,observation_request.Obs_DtTm) between @startdate AND dateadd(d,1,@enddate)
		) AS PrePivotAssessment2 ON PrePivotAssessment2.pat_id1 = PrePivotAssessment1.Pat_ID1
		WHERE (PrePivotAssessment1.RowNum = 1 or PrePivotAssessment1.RowNum IS NULL)
			AND (PrePivotAssessment2.RowNum = 1 or PrePivotAssessment2.RowNum IS NULL)
	) AS Assessment1 ON TreatmentEvents.Pat_ID1 = Assessment1.patient
	/* ------------------------------ Demographic Query -------------------------------------------- */
	LEFT OUTER JOIN
	(SELECT patient_details.Pat_ID1, 
		patient_details.SS_Number, 
		patient_details.Salutation, 
		patient_details.First_Name, 
		patient_details.Middle_Name, 
		patient_details.Last_Name, 
		patient_details.Alias_Name, 
		patient_details.Birth_DtTm, 
		Admin1.Gender, 
		Admin1.Birth_Place, 
		cc.code as Birth_Place_SACC,
		Admin1.Pat_Adr1, 
		Admin1.Pat_Adr2, 
		Admin1.Pat_City, 
		Admin1.Pat_State, 
		isnull(ss.code,'99') as Pat_State_code, 
		Admin1.Pat_Postal,		
		CASE WHEN Admin1.Race != '' THEN Admin1.Race ELSE CASE WHEN Race_prompt.Text IS NOT NULL THEN Race_prompt.Text ELSE Ethnicity_prompt.text END END AS indigenous_status,
		Admin1.Expired_DtTm, 
		Admin1.Ref_Md2_ID as GP_ID
	FROM Patient AS patient_details with (nolock)
		join Admin as admin1 with (nolock) on patient_details.Pat_ID1 = Admin1.Pat_ID1
		LEFT OUTER JOIN 
			( SELECT ADM_ID, MAX(PRO_ID) AS PRO_ID_m
				FROM Race with (nolock)
				GROUP BY ADM_ID
			) AS partial_race ON Admin1.ADM_ID = partial_race.ADM_ID
		LEFT OUTER JOIN Prompt AS Race_prompt with (nolock) ON Race_prompt.Pro_ID = partial_race.PRO_ID_m
		LEFT OUTER JOIN prompt AS Ethnicity_prompt with (nolock) ON Ethnicity_prompt.Pro_ID = Admin1.Ethnicity_PRO_ID
		left join @countries cc on cc.name = Admin1.Birth_Place
		left join @states ss on ss.name = rtrim(Admin1.Pat_State)
	) AS Demographics
	ON Demographics.Pat_ID1 = TreatmentEvents.Pat_ID1
	left join @indigenious indigenious on indigenious.name = Demographics.indigenous_status
	/* ------------------------------ Medical Records Query ---------------------------------------- */
	LEFT OUTER JOIN
	(
		SELECT Medical1.MED_ID, 
			Medical1.Pat_ID1, 
			Medical1.Diagnosis_Class, 
			PalativeDate.Encounter_DtTm AS PalativeDate, 
			MDT1.Act_DtTm1,
			Medical1.Topography1, 
			Medical1.Diag_Type1, 
			Medical1.Diag_Code,
			Medical1.User_Code,
			Medical1.User_Code1, -- added for WHO Code.
			Medical1.Diag_Confirm1, 
			Medical1.Paired_Organ, 
			Medical1.Hist_Grade, 
			Medical1.Histology,
			Medical1.Dx_DtTm1, 
			--case when Medical1.Dx_DtTm1 is null and Medical1.staff_type = 'Haematologist' then Medical1.Diag_Partial_DtTm else Medical1.Dx_DtTm1 end as Dx_DtTm1, -- Removed this line as not reliable at RNS? To be confirmed but many patient missing a consult?
			Medical1.RDx_DtTm2, 
			Medical1.Diag_DtTm1, 
			--consultation.Act_DtTm1 AS Diag_DtTm1,
			Medical1.RDiag_DtTm2, 
			Medical1.RDiag_Confirm2, 
			Medical1.RTopography2, 
			Medical1.RDiag_Type2,
			null as Trial_Short_Desc, 
			null as DtTm_Reg, 
			--patient_trial.Trial_Short_Desc, 
			--patient_trial.DtTm_Reg, 
			ReferralDateTable.Eff_DtTm AS ReferralDate1, 
			ConsentDate.Encounter_DtTm AS ConsentDate, 
			Medical1.Dist_Mets_1,
			dx_record_Create_DtTm,
			dx_record_Sanct_DtTm,
			dx_record_Edit_DtTm
		FROM (
			SELECT Medical.MED_ID, 
				Medical.Pat_ID1, 
				Medical.Paired_Organ,
				Medical.Histology, 
				Medical.Hist_Grade, 
				Medical.Diagnosis_Class, 
				Medical.Dist_Mets_1, 
				TopogP.Diag_Code,TopogP.User_Code,
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Dx_Partial_DtTm  ELSE Medical.Dx_Partial_DtTm END AS RDx_DtTm2,		-- class 5 = re-occurence
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Diag_Confirm		ELSE Medical.Diag_Confirm END AS RDiag_Confirm2,
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Dx_Partial_DtTm  ELSE Medical.Dx_Partial_DtTm END AS RDiag_DtTm2,
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN TopogP.Diag_Code				ELSE Topog.Diag_Code  END AS RTopography2, --(MOSAIQ>=2.41)
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN TopogP.Diag_Type				ELSE Topog.Diag_Type END AS RDiag_Type2, --(MOSAIQ>=2.41)
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Dx_Partial_DtTm  ELSE Medical.Dx_Partial_DtTm  END AS Dx_DtTm1,
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Diag_Confirm		ELSE Medical.Diag_Confirm  END AS Diag_Confirm1,
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Dx_Partial_DtTm  ELSE Medical.Dx_Partial_DtTm  END AS Diag_DtTm1_old,
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Diag_Partial_DtTm  ELSE  Medical.Diag_Partial_DtTm  END AS Diag_DtTm1,
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN TopogP.Diag_Code				ELSE Topog.Diag_Code END AS Topography1, --(MOSAIQ>=2.41)
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN TopogP.User_Code				ELSE Topog.User_Code END AS User_Code1, --(MOSAIQ>=2.41)	 -- Added to detect ICD Code when WH Code used.
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN TopogP.Diag_Type				ELSE Topog.Diag_Type END AS Diag_Type1, --(MOSAIQ>=2.41) 
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN coalesce(MedicalPrimary.Create_DtTm,Medical.Create_DtTm)		ELSE coalesce(Medical.Create_DtTm, MedicalPrimary.Create_DtTm) END AS dx_record_Create_DtTm, 
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN coalesce(MedicalPrimary.Sanct_DtTm,Medical.Sanct_DtTm)		ELSE coalesce(Medical.Sanct_DtTm, MedicalPrimary.Sanct_DtTm) END AS dx_record_Sanct_DtTm, 
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN coalesce(MedicalPrimary.Edit_DtTm,Medical.Edit_DtTm)		ELSE coalesce(Medical.Edit_DtTm, MedicalPrimary.Edit_DtTm) END AS dx_record_Edit_DtTm, 
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN MedicalPrimary.Diag_Partial_DtTm		ELSE Medical.Diag_Partial_DtTm END AS Diag_Partial_DtTm, --(MOSAIQ>=2.41) 
				CASE WHEN Medical.Diagnosis_Class in (5,2) THEN sp.type							ELSE sm.type END AS staff_type --(MOSAIQ>=2.41) 

			FROM Medical  with (nolock)
			left join Medical AS MedicalPrimary with (nolock) ON MedicalPrimary.MED_ID = Medical.Related_MED_ID and MedicalPrimary.Related_MED_ID  is null and MedicalPrimary.Diagnosis_Class in (1,7)  --- = MedicalPrimary.MED_ID and MedicalPrimary.Related_MED_ID IS NOT NULL
			left join Topog with (nolock) on Medical.TPG_ID = Topog.TPG_ID  
			left join Topog as TopogP with (nolock) on MedicalPrimary.TPG_ID = TopogP.TPG_ID  
			left join Staff sm on sm.Staff_ID = medical.Recorded_By_ID
			left join Staff sp on sp.Staff_ID = MedicalPrimary.Recorded_By_ID
			--where medical.Edit_DtTm BETWEEN @startdate AND dateadd(d,1,@enddate)
		) AS Medical1  
		LEFT OUTER JOIN
		(SELECT Object.Pat_ID1, min(Object.Encounter_DtTm) as Eff_DtTm  
			FROM Object with (nolock)
			WHERE Object.Status_Enum IN (3,5,7,8,9)  
				AND Object.Version = 0  
				AND Object.DocType IN (Select Prompt.Enum FROM Prompt with (nolock) WHERE Prompt.Text IN ('xxReferral New Patientxx','xxReferral Inxx')) 
				--and (object.review_id in (select staff_id from staff with (nolock) where type in ('Inactive','Haematolgist','Haematologist','Med Onc Reg','MedOnc','Haem Reg'))
					--or object.Cosig_ID in (select staff_id from staff with (nolock) where type in ('Inactive','Haematolgist','Haematologist','Med Onc Reg','MedOnc','Haem Reg')))
			group by Object.Pat_ID1
		) AS ReferralDateTable 
		/*/(SELECT Pat_ID1,  Eff_DtTm
			FROM PatAuth(NOLOCK) 
		) AS ReferralDateTable*/
		ON Medical1.Pat_ID1 = ReferralDateTable.Pat_ID1 --AND DATEDIFF(mm,ISNULL(Medical1.Diag_DtTm1,ReferralDateTable.Eff_DtTm),ReferralDateTable.Eff_DtTm)<=12
		LEFT OUTER JOIN
		(SELECT Object.Pat_ID1, min(Object.Encounter_DtTm) as Encounter_DtTm 
			FROM Object with (nolock)
			WHERE Object.Status_Enum IN (3,5,7,8,9) 
				AND Object.Version = 0 
				AND Object.DocType IN (Select Prompt.Enum FROM Prompt with (nolock) WHERE Prompt.Text IN ('Chemo Consent Form'))
			group by Object.Pat_ID1
		) AS ConsentDate ON Medical1.Pat_ID1 = ConsentDate.Pat_ID1 
		LEFT OUTER JOIN 
		(select s.pat_id1, min(s.App_DtTm) as Encounter_DtTm 
		from schedule s with (nolock)
			join dbo.Schedule_ScheduleStatus_MTM ssm with (nolock) on s.Sch_ID = ssm.Sch_ID 
			join dbo.ScheduleStatus ss with (nolock) on ssm.ScheduleStatusID = ss.ScheduleStatusID --and ss.SystemDefined = 1  and ss.ScheduleStatusID = 9  -- charge
		where s.Suppressed =0 and s.version = 0 and s.Activity in (select hsp_code from cpt with (nolock) where cGroup LIKE 'CON' AND Description like '%pal1234%') group by pat_id1)  AS PalativeDate ON Medical1.Pat_ID1 = PalativeDate.Pat_ID1  --pallcare not in place at CCLHD
		LEFT OUTER JOIN 
		(SELECT s.Pat_ID1, min(s.App_DtTm)  AS Act_DtTm1 
			FROM Schedule s with (nolock)
			join dbo.Schedule_ScheduleStatus_MTM ssm with (nolock) on s.Sch_ID = ssm.Sch_ID 
			join dbo.ScheduleStatus ss with (nolock) on ssm.ScheduleStatusID = ss.ScheduleStatusID and ss.SystemDefined = 1  and ss.ScheduleStatusID <> 8 -- not cancel
			WHERE s.Suppressed =0 
				and s.version = 0
				and s.Activity IN (select hsp_code from cpt with (nolock) where Description like '%mdt%') 
				and s.App_DtTm > (select isnull(dateadd(d,-30,min(Dx_Partial_DtTm)),'1900-01-01') from Medical with (nolock) where Diagnosis_Class in (1,7)   and pat_id1=s.Pat_ID1)  -- and Dx_Partial_DtTm is not null
			--	and App_DtTm > (select isnull(dateadd(d,-30,min(Dx_DtTm)),'1900-01-01') from Medical where Diagnosis_Class = 1  and pat_id1=Schedule.Pat_ID1)  -- and Dx_Partial_DtTm is not null
			group by s.Pat_ID1
		) AS MDT1 ON Medical1.Pat_ID1 = MDT1.Pat_ID1
	LEFT OUTER JOIN
	
	(SELECT s.Pat_ID1, min(s.App_DtTm)  AS Act_DtTm1 
			FROM Schedule s with (nolock)
			join dbo.Schedule_ScheduleStatus_MTM ssm with (nolock) on s.Sch_ID = ssm.Sch_ID 
			join dbo.ScheduleStatus ss with (nolock) on ssm.ScheduleStatusID = ss.ScheduleStatusID and ss.SystemDefined = 1  and ss.ScheduleStatusID = 9  -- charge
			WHERE s.Suppressed =0 
				and s.version = 0
				and s.Activity IN 
				(	select hsp_code 
					from CPT(nolock) 
					where CGroup ='CON' AND Status_Inactive =0
			              AND CPT_Code IS NOT NULL AND Description LIKE '%New%'
				)
				--and App_DtTm >= (select isnull(dateadd(d,0,min(Dx_DtTm)),'1900-01-01') from Medical where Diagnosis_Class = 1  and pat_id1=Schedule.Pat_ID1)  -- and Dx_DtTm is not null
			GROUP BY s.Pat_ID1
			
		) AS Consultation ON Medical1.Pat_ID1 = Consultation.Pat_ID1
	) AS MedicalRecords
	ON MedicalRecords.PAT_ID1 = TreatmentEvents.Pat_ID1 AND MedicalRecords.MED_ID = TreatmentEvents.MED_ID

	left join @cancerdiagnosis cancerdiagnosis on cancerdiagnosis.name = MedicalRecords.Diag_Confirm1
	LEFT JOIN @laterality laterality on laterality.name = MedicalRecords.Paired_Organ 
/* ------------------------------ Doctor's information Query ----------------------------------- */
	LEFT OUTER JOIN
	( SELECT S.Staff_ID,	ltrim(rtrim(S.First_Name) +' '+replace(ltrim(substring(S.Last_Name, 1,charindex(' ',S.Last_Name)-1)),',','')) as OncName, AttendingDr.OncAHPRA
		FROM Staff(nolock) S
		JOIN (
			--Only Attending MDs with AHPRA to be included below.
			SELECT DISTINCT A.Attending_Md_Id,   E.ID_Code AS OncAHPRA FROM Admin A
			INNER JOIN Ext_ID(nolock) E ON A.Attending_Md_Id = E.Staff_ID
			WHERE E.Ext_Type = 'ESI'
			AND Inst_ID IS NULL -- Global provider are assinged to Inst_ID
			AND E.ID_Code LIKE 'MED%' -- Some non MO Drs will have global ID that are provider numbers. 
			) as AttendingDr ON AttendingDr.Attending_Md_Id = S.Staff_ID
	) AS staff_details ON staff_details.Staff_ID = TreatmentEvents.MD_ID			
	LEFT OUTER JOIN
	( SELECT CASE WHEN id_table.External_ID IS NULL 
				THEN ltrim(RTRIM(staff_details_table.Suffix) + ' ' +RTRIM(staff_details_table.First_Name) + ' ' + RTRIM(staff_details_table.Last_Name))
				ELSE ltrim(RTRIM(external_details_table.Suffix) + ' ' +RTRIM(external_details_table.First_Name) + ' ' + RTRIM(external_details_table.Last_Name))
			END AS GPName,
			CASE WHEN id_table.External_ID IS NULL 
				THEN (RTRIM(staff_details_table.Adr1) + ', '  + RTRIM(staff_details_table.Adr2) + ', '  + RTRIM(staff_details_table.City) + ', '  + RTRIM(staff_details_table.State_Province) + ' '  + RTRIM(staff_details_table.Postal))
				ELSE (RTRIM(external_details_table.Adr1) + ', '  + RTRIM(external_details_table.Adr2) + ', '  + RTRIM(external_details_table.City) + ', '  + RTRIM(external_details_table.State_Province) + ' '  + RTRIM(external_details_table.Postal))
			END AS GPAddr,
			referrer_table.Pat_ID1, 
			ahpra_table.ID_Code AS GPAHPRA
		FROM Admin AS referrer_table with (nolock)
			LEFT OUTER JOIN PNP  AS id_table with (nolock) ON id_table.PNP_ID = referrer_table.Ref_Md2_ID
			LEFT OUTER JOIN Staff AS staff_details_table with (nolock) ON staff_details_table.Staff_ID = id_table.Staff_ID
			LEFT OUTER JOIN [External]  AS external_details_table with (nolock) ON external_details_table.External_ID = id_table.External_ID
			LEFT OUTER JOIN Ext_ID AS ahpra_table with (nolock) ON staff_details_table.Staff_ID = ahpra_table.Staff_ID OR external_details_table.External_ID = ahpra_table.External_ID and ahpra_table.Ext_Type = 'ST LICENSE'
	) AS external_staff
	ON external_staff.Pat_ID1 = TreatmentEvents.PAT_ID1
	/* ---------------------------------- IDENT query ------------------------------------------------*/
	LEFT OUTER JOIN
	(SELECT ident_version.Pat_ID1, Ident.IDA, Ident.IDB, Ident.IDC, Ident.IDD, Ident.IDE, Ident.IDF
		FROM Ident with (nolock),
			( select Pat_id1, max(version) AS row_version from Ident with (nolock) group by Pat_Id1 ) AS ident_version
		where Ident.Pat_Id1 = ident_version.Pat_Id1 and Ident.Version = ident_version.row_version
	) AS ident_partial
	ON ident_partial.Pat_ID1 = TreatmentEvents.Pat_ID1
	/* --------------------------------------------------------------------------------------------- */
) -- AS main_query
  

	left outer join	(
/* --------------------------------- Staging Details Query    ------------------------------ */
		select  
			TNMStage.Med_ID AS stage_Med_ID1, 
			TNMStage.StageType AS StageType1, 
			TNMStage.T_Stage AS T_Stage1, 
			TNMStage.N_Stage AS N_Stage1, 
			TNMStage.M_Stage AS M_Stage1, 
			TNMStage.Stage AS combined_stage, 
			TNMStage.Edition AS Edition1, 
			TNMStage.date_staged_dttm,
			Medical.PAT_ID1 AS staging_pat_id, 
			CASE Medical.Diagnosis_Class WHEN 5 THEN 2 WHEN 4 THEN 2 ELSE 1 END AS Diagnosis_Class1, -- TODO need more sophisticated rules here
		--	Medical.Dx_DtTm  AS Dx_DtTm1
			Medical.Dx_partial_DtTm  AS Dx_DtTm1,
			TNMStage.Edit_DtTm
		from TNMStage  with (nolock)
			join (select med_id, max(tnm_id) as tnm_id from TNMStage   with (nolock) group by med_id) b on TNMStage.med_id = b.med_id and TNMStage.tnm_id = b.tnm_id
			join Medical with (nolock) on TNMStage.Med_ID = Medical.Med_ID
		where StageType in (0,1) 
		    --and (Medical.Dx_DtTm  between @startdate AND dateadd(d,1,@enddate))
			--	or TNMStage.Edit_DtTm between @startdate AND dateadd(d,1,@enddate))
	) as Staging on staging.staging_pat_id = Demographics.Pat_ID1 AND staging.stage_Med_ID1 = TreatmentEvents.Med_ID
	left join @stagegroup stagegroup on stagegroup.code = Staging.combined_stage
	left join @otherstagegroup otherstage on otherstage.code = staging.combined_stage
	left outer join	(
/* --------------------------------- Drug Details Query    ------------------------------ */
		SELECT DISTINCT 
			stage1.Pat_ID1 AS regimen_pat_id,
			--stage1.This_Instance AS regimen_cycle_number,
			stage1.This_Instance AS regimen_cycle_number, 
			stage1.PCP_ID AS care_plan_id,
			stage5.drug_label AS drug_name, 
			--stage4.Adm_Code AS drug_name,
			--cast(stage4.Adm_Amount as varchar(10))+' '+isnull(obs.Label,'') AS dose1, 
			cast(cast(stage4.Adm_Amount as decimal(15,2)) as varchar(20))+' '+isnull(obs.Label,'') AS dose1,  
			stage4.Admin_Route AS route,
			--END AS route, */
			stage4.Adm_DtTm AS start_date1, 
			stage4.Adm_End_DtTm AS end_date1, 
			stage8.Cycle_Length AS frequency1, 
			1 AS frequency_unit, 
			(stage7.Day_Offset + 1 ) AS day_of_week 
		FROM PatCPlan  AS stage1 with (nolock)
			INNER JOIN PatCItem AS stage2 with (nolock) ON stage1.PCP_ID = stage2.PCP_ID
			INNER JOIN Orders  AS stage3 with (nolock) ON stage2.PCI_ID = stage3.PCI_ID and stage3.Order_Type in (2, 4, 5, 6) 
			INNER JOIN PharmAdm  AS stage4 with (nolock) ON stage3.ORC_ID = stage4.ORC_Set_ID
			left join ObsDef obs with (nolock) on obs.OBD_ID = stage4.Adm_Units
			INNER JOIN Drug AS stage5 with (nolock) ON stage4.Adm_Code = stage5.DRG_ID
			left JOIN CPItem AS stage7 with (nolock) ON stage2.CPI_ID = stage7.CPI_ID
			left JOIN CPlan AS stage8 with (nolock) ON stage1.CPL_ID = stage8.CPL_ID
		WHERE stage4.Adm_Amount > 0
			AND (stage2.CPI_ID is NULL OR CONVERT(date, (stage4.Adm_DtTm + (stage8.Cycle_Length - isnull(stage7.Day_Offset,0))-1 )) BETWEEN @startdate AND dateadd(d,1,@enddate))
	)  as drugs on drugs.regimen_pat_id = Demographics.Pat_ID1  AND TreatmentEvents.PCP_ID = drugs.care_plan_id 
					 							
	left join @drugadminroute drugadminroute on  drugadminroute.name = drugs.route

	left join (SELECT stage1.Pat_ID1 AS regimen_pat_id, 
			stage1.PCP_GROUP_ID AS group_id,
			stage1.This_Instance AS last_cycle_number,  
			stage4.Adm_End_DtTm AS last_admin_date,
			stage8.Cycle_Length,
			stage1.status_enum as plan_status,
			stage4.Status_Enum as adm_status, 
			case when cast(stage4.Adm_End_DtTm as date) < dateadd(d, stage8.Cycle_Length*-2,@enddate) then 1 else 0 end as isvalid,
			row_number() over (partition by stage1.Pat_ID1, stage1.PCP_GROUP_ID  order by stage4.Adm_End_DtTm desc) as roww
		FROM PatCPlan  AS stage1 with (nolock) 
			JOIN PatCItem AS stage2 with (nolock) ON stage1.PCP_ID = stage2.PCP_ID
			JOIN Orders  AS stage3 with (nolock) ON stage2.PCI_ID = stage3.PCI_ID and stage3.Order_Type in (2, 4, 5, 6) 
			JOIN PharmAdm  AS stage4 with (nolock) ON stage3.ORC_ID = stage4.ORC_Set_ID
			JOIN CPItem AS stage7 with (nolock) ON stage2.CPI_ID = stage7.CPI_ID
			JOIN CPlan AS stage8 with (nolock) ON stage1.CPL_ID = stage8.CPL_ID
			--join drug d with (nolock) on d.DRG_ID = stage4.Adm_Code 
		WHERE stage4.Adm_Amount >= 0 
			and stage4.Status_Enum in (0,2,3,5)		-- unknown, close, complete, approve  
			and stage1.status_enum in (0,2,3,5,23)	-- unknown, close, complete, approve, discontinue
			and stage4.Adm_End_DtTm is not null
			--and d.drug_type in (select obd_id from ObsDef where label like 'antineoplastic%' or label like 'chemo%')    -- around 15% difference if only select chemo types compare to all types
	) as last_admin on last_admin.regimen_pat_id = Demographics.Pat_ID1  AND TreatmentEvents.PCP_GROUP_ID = last_admin.group_id  and last_admin.roww = 1 and last_admin.isvalid = 1

	left join (SELECT stage1.Pat_ID1 AS regimen_pat_id, 
			stage1.PCP_GROUP_ID AS group_id,
			stage1.This_Instance AS first_cycle_number,  
			stage4.Adm_End_DtTm AS first_admin_date,
			row_number() over (partition by stage1.Pat_ID1, stage1.PCP_GROUP_ID  order by stage4.Adm_End_DtTm asc) as roww
		FROM PatCPlan  AS stage1 with (nolock) 
			JOIN PatCItem AS stage2 with (nolock) ON stage1.PCP_ID = stage2.PCP_ID
			JOIN Orders  AS stage3 with (nolock) ON stage2.PCI_ID = stage3.PCI_ID and stage3.Order_Type in (2, 4, 5, 6)  -- pharmcy orders only
			JOIN PharmAdm  AS stage4 with (nolock) ON stage3.ORC_ID = stage4.ORC_Set_ID
			--join drug d with (nolock) on d.DRG_ID = stage4.Adm_Code 
		WHERE stage4.Adm_Amount >= 0 
			and stage4.Status_Enum in (0,2,3,5)		-- unknown, close, complete, approve  
			and stage1.status_enum in (0,2,3,5,23)	-- unknown, close, complete, approve, discontinue
			and stage4.Adm_End_DtTm is not null
			--and d.drug_type in (select obd_id from ObsDef where label like 'antineoplastic%' or label like 'chemo%')	-- around 15% difference if only select chemo types compare to all types
	) as first_admin on first_admin.regimen_pat_id = Demographics.Pat_ID1  AND TreatmentEvents.PCP_GROUP_ID = first_admin.group_id  and first_admin.roww = 1
)
-- exclude Regimen details where it is a valid EviQ protocol
--WHERE ( TreatmentEvents.Regimen = '1570' or drugs.regimen_cycle_number is NULL or not TreatmentEvents.Regimen LIKE '[0-9][0-9]%' ) -- quick hack, need deeper access to the database to support regular expressions
 
-- select  * from ObsDef where label like '%drug%typ%'

--Select * From #omis where TreatingFacilityCode = ''

if object_id('tempdb..#consultation') is not null
 drop table #consultation
if object_id('tempdb..#diagnosedate') is not null
 drop table #diagnosedate
if object_id('tempdb..#episodedates') is not null
 drop table #episodedates
if object_id('tempdb..#episodedates2') is not null
 drop table #episodedates2
if object_id('tempdb..#ecog') is not null
 drop table #ecog
 
 update #omis
set calculated_end_date = dateadd(d, isnull(cycle_length,0)*isnull(last_cycle_number,0) , EpisodeStartDate) 
where EpisodeStartDate is not null 
	and cycle_length > 0
	and last_cycle_number  > 0
	


-- remove test patients 
delete #omis
where 
--not len(mrn)=7 
--or ISNUMERIC(mrn) = 0
--or  upper(mrn) like '[A-z]%'1` 
upper(mrn) like '716757' --test, pathologytwo
 


update #omis
set InitialTreatmentFlag = 2

update a
set InitialTreatmentFlag = 1
from #omis a
	join (select  Pat_ID1,PCP_Group_ID, eff_dttm from patcplan with (nolock) where This_Instance = 1  and CPL_ID is not null and course = 1) b
	on a.Pat_ID1 = b.Pat_ID1 and a.GroupID = b.PCP_Group_ID and b.eff_dttm >=  a.DateOfDiagnosis and b.eff_dttm <= dateadd(m, 4, a.DateOfDiagnosis)

update a
set  InitialTreatmentFlag = 1
from #omis a
join (select a.pat_id1,  a.PCP_Group_ID
	from patcplan a with (nolock)
	join (select pat_id1, min(eff_dttm) as eff_dttm from patcplan with (nolock) where This_Instance = 1 and eff_dttm is not null and CPL_ID is not null group by pat_id1) b
		on a.Pat_ID1  = b.Pat_ID1 and a.Eff_DtTm = b.eff_dttm ) b on a.Pat_ID1  = b.Pat_ID1 and a.GroupID = b.PCP_Group_ID 
where a.DateOfDiagnosis is null

 
-- diagnose date
select a.PAT_ID1, a.MED_ID, a.Dx_DtTm
into #diagnosedate
from (select m.PAT_ID1, m.MED_ID, case when m.Diagnosis_Class in (5,2) THEN p.Dx_partial_DtTm  ELSE m.Dx_partial_DtTm  END AS Dx_DtTm
	from  Medical m with (nolock)
		join Medical p with (nolock) ON p.MED_ID = m.Related_MED_ID and p.Related_MED_ID  is null and p.Diagnosis_Class in (1,7)) a
	join patient pt with (nolock) on pt.Pat_ID1 = a.PAT_ID1 and a.Dx_DtTm >= pt.Birth_DtTm

	 
update #omis 
set ConsultationDate = null
where  ConsultationDate  <  coalesce(ReferralDate, DateOfDiagnosis,DateOfBirth) or ConsultationDate > EpisodeStartDate--NotificationEpisodeChemoStartDate


-- consult date > (referral date, dx date)
select Pat_ID1, groupID, Act_DtTm1, OncName, OncAHPRA
into #consultation
from (
	SELECT s.Pat_ID1, e.groupID, s.App_DtTm  AS Act_DtTm1 ,
		ISNULL(ltrim(rtrim(t.First_Name) +' '+replace(ltrim(substring(t.Last_Name, 1,charindex(' ',t.Last_Name)-1)),',','')),'') as OncName,
		ISNULL(Ext_ID.ID_Code, '') AS OncAHPRA, t.type as staff_type, 
		ROW_NUMBER () over (partition by s.Pat_ID1, e.groupID order by len(Ext_ID.ID_Code) desc, s.App_DtTm desc) as roww
	FROM Schedule  s with (nolock)
		join (select pat_id1, groupID, min(EpisodeStartDate) as dx_dttm,  isnull(min(NotificationEpisodeChemoStartDate),getdate()) as NotificationEpisodeChemoStartDate from #omis group by pat_id1, groupid) e on e.Pat_ID1 = s.Pat_ID1 and cast(s.App_DtTm as date) >= dateadd(yy,-1,e.dx_dttm) and cast(s.App_DtTm as date) <= e.dx_dttm
		join dbo.Schedule_ScheduleStatus_MTM ssm with (nolock) on s.Sch_ID = ssm.Sch_ID 
		join dbo.ScheduleStatus ss with (nolock) on ssm.ScheduleStatusID = ss.ScheduleStatusID and ss.SystemDefined = 1  and ss.ScheduleStatusID = 9 -- = charge
		left join staff t with (nolock) on t.Staff_ID = s.Staff_ID 
		LEFT JOIN Ext_ID with (nolock) ON t.Staff_ID = Ext_ID.Staff_ID
	WHERE s.Suppressed =0 
		and s.version = 0
		and s.Activity IN (select hsp_code from cpt with (nolock)  where CGroup ='CON' AND Status_Inactive =0
			              AND CPT_Code IS NOT NULL AND Description LIKE '%New%')
						  
						  /*hsp_code in (
		'00110.00','00116.00','00116.01','00132.00','00133.00','00110.01','00110.02','00132.00','00110.03','00132.01','00132.02','00116.00'
		,'00119.00','00116.01','00116.02','00116.03','00116.025','00133.01','00110.04','00116.021','C90011','C90007'
		,'C90003','C90015','H10002','H10003','C90021','C90002','C90006','C90010','C90014','C90020'
		,'132.01','H10002','H10003','119.00','HMFUOS','132.00','HaemInCons','HICNo','Z10020','110.00','HMNCDVA','HMNewOS','133.00','HMFUCDVA'
		,'HSCNo','A10001','116.00','A20003','A40003','A50003','A30003','A30004','A20004','A40004','A50004','A20001','A40001','A50001'
		,'A30001','A40002','A50002','A30002','A20002','C90015','C90011','C90007','C90006','C90014','C90010','C90021','C90020','116.00'
		,'C90003','C90002','110.00','119.00','133.01','116.03','110.04','133.00','132.00','110.03','110.02','110.01','132.02','116.021'
		))
		--and App_DtTm >= (select isnull(dateadd(d,0,min(Dx_DtTm)),'1900-01-01') from Medical where Diagnosis_Class = 1  and pat_id1=Schedule.Pat_ID1)  -- and Dx_DtTm is not null
	--group by s.Pat_ID1, e.groupID
	*/
	) A 
WHERE roww = 1

update a
set a.ConsultationDate = b.Act_DtTm1
from #omis a 
	join #consultation b on a.Pat_ID1 = b.Pat_ID1 and a.GroupID = b.GroupID 
--where a.EpisodeStartDate < a.ConsultationDate 

update #omis
set ReferralDate = null
where ReferralDate > coalesce(ConsultationDate,EpisodeStartDate) 

-- referral date >= diagnose date and <= consult date
update a
set a.ReferralDate = b.Eff_DtTm1
from #omis a 
	join (SELECT o.Pat_ID1, c.GroupID, max(o.Encounter_DtTm) as Eff_DtTm1  
		FROM Object o with (nolock)
			join (select pat_id1, groupid,   min(EpisodeStartDate) as dx_dttm, min(ConsultationDate) as ConsultationDate  from #omis group by pat_id1, groupid) c on o.Pat_ID1 = c.Pat_ID1 and cast(o.Encounter_DtTm as date) <= c.ConsultationDate and cast(o.Encounter_DtTm as date) >= dateadd(mm,-6,c.ConsultationDate) and cast(o.Encounter_DtTm as date) >= dateadd(yy,-1, c.dx_dttm)
		WHERE o.Status_Enum IN (3,5,7,8,9)  
			AND o.Version = 0 
			--and o.doctype = 18  -- internal referrals
			AND o.DocType IN (Select Prompt.Enum FROM Prompt with (nolock) WHERE Prompt.Text IN ('Referral New Patient','Referral In')) 
		--	and (o.review_id in (select staff_id from staff with (nolock) where type in ('Inactive','Haematolgist','Haematologist','Med Onc Reg','MedOnc','Haem Reg'))
		--	or o.Cosig_ID in (select staff_id from staff with (nolock) where type in ('Inactive','Haematolgist','Haematologist','Med Onc Reg','MedOnc','Haem Reg')))
		group by o.Pat_ID1, c.GroupID) b on a.Pat_ID1 = b.Pat_ID1 and a.GroupID = b.GroupID

update #omis 
set ClinicalTrialDate = NULL
where  ClinicalTrialDate  < coalesce(DateOfDiagnosis,DateOfBirth)  



-- ClinicalTrialDate > diagnose date
update a 
set a.ClinicalTrialDate = b.DtTm_Reg, a.ClinicalTrialName = case when b.Trial_Short_Desc = '' then  b.trial_id else b.Trial_Short_Desc end
from #omis a
	join (SELECT p.Pat_ID1, d.groupid, Trial1.Trial_Short_Desc, Trial1.Trial_id, Trial1.TRL_ID,  p.DtTm_Reg, ROW_NUMBER() over (partition by p.Pat_ID1, d.groupid order by p.DtTm_Reg asc) as rownum
		FROM  PatTrial p with (nolock)
			join Trial  AS Trial1 with (nolock) on p.TRL_ID = Trial1.TRL_ID 
		--	join (select pat_id1, min(dx_dttm) as dx_dttm from #diagnosedate group by pat_id1) d on d.PAT_ID1 = p.Pat_ID1 and p.DtTm_Reg >= d.dx_dttm
			join (select pat_id1, groupid, max(coalesce(ReferralDate,ConsultationDate,DateOfDiagnosis)) as dx_dttm from #omis group by pat_id1, groupid) d on d.PAT_ID1 = p.Pat_ID1 and cast(p.Sts_Start_DtTm as date)>= d.dx_dttm
		where  p.Version = 0 
		--group by p.Pat_ID1, d.groupid, Trial1.Trial_Short_Desc, Trial1.TRL_ID
		) b on a.Pat_ID1 = b.Pat_ID1 and b.GroupID = a.GroupID and b.rownum = 1
		 
		-- Select * From #omis

update #omis
set PerformanceStatusDate = null, PerformanceStatus = null
where PerformanceStatusDate < dateadd(yy, -1, EpisodeStartDate)

/*Script to add in the Attending_MD when Treating MD is missing or Blank or Not a Specialist (Determined by AHPRA Number).*/
 update o
 Set o.DoctorName = AttendingMD.OncName , o.AmoRegReferringNumber = AttendingMD.OncAHPRA
 from #omis o
 join (
	SELECT S.Staff_ID,
			ltrim(rtrim(S.First_Name) +' '+replace(ltrim(substring(S.Last_Name, 1,charindex(' ',S.Last_Name)-1)),',','')) as OncName,
			E.ID_Code AS OncAHPRA, 
			A.Pat_ID1
		FROM Staff(nolock) S
		JOIN [ADMIN](NOLOCK) A -- Future State after Implementation @RNSH should have md_id from Cplan Table (CPLAN.MD_ID)
		ON S.Staff_Id = A.Attending_MD_ID
	    JOIN Ext_ID(nolock) E ON S.Staff_ID = E.Staff_ID
		--join #omis on #OMIS.Pat_ID1 = A.Pat_ID1
		WHERE E.Ext_Type = 'ESI'
		AND Inst_ID IS NULL -- GLoabal ESI ID Provider are assinged to Inst_ID
		AND E.ID_Code LIKE 'MED%' -- Some non MO Drs will have global ID that are provider numbers. 
		) as AttendingMD ON o.Pat_ID1 = AttendingMD.Pat_ID1

Where o.DoctorName IS NULL or o.DoctorName = '' or NOT(o.AmoRegReferringNumber LIKE 'MED%')


--update #omis
--set ReferralDate = null
--where ReferralDate > EpisodeStartDate


-- ECOG Values; reference to #omis table to limit data. 
SELECT  observation_request.Pat_ID1  
	, observation_request.Obs_DtTm as Create_DtTm
	, observation_definition2nd.Label AS Ecog_Value
into #ecog
FROM  Observe AS Observe1 with (nolock)
	INNER JOIN ObsDef AS observation_definition with (nolock) ON Observe1.OBD_ID = observation_definition.OBD_ID and observation_definition.Label in ('ECOG')
	INNER JOIN ObsDef AS observation_definition2nd with (nolock) ON Observe1.Obs_Choice = observation_definition2nd.OBD_ID
	INNER JOIN ObsReq AS observation_request with (nolock) ON observation_request.Pat_ID1 = Observe1.Pat_ID1 AND observation_request.OBR_ID = Observe1.OBR_SET_ID and observation_request.Version = 0 AND observation_request.Status_Enum NOT IN (1)
	INNER JOIN #omis on observation_request.Pat_ID1 = #omis.Pat_ID1

where observation_request.Obs_DtTm >= dateadd(dd,-365,@startdate )
and observation_request.Obs_DtTm < @enddate
union all			
select Notes.pat_id1, cast(Create_DtTm as date) as Create_DtTm, 
case when patindex('%[0-9]%',SUBSTRING(notes.notes, patindex('%ecog%',notes.notes), 7)) > 0  then SUBSTRING(SUBSTRING(notes.notes, patindex('%ecog%',notes.notes), 7), patindex('%[0-9]%',SUBSTRING(notes.notes, patindex('%ecog%',notes.notes), 7)),1) end Ecog_Value
from Notes  with (nolock)
	INNER JOIN #omis on Notes.Pat_ID1 = #omis.Pat_ID1
where notes like '%ecog%'
and patindex('%[0-9]%',SUBSTRING(notes.notes, patindex('%ecog%',notes.notes), 7)) > 0
and Create_DtTm >= dateadd(dd,-365,@startdate )
and Create_DtTm < @enddate


update l
set l.PerformanceStatusDate = b.Create_DtTm
	,l.PerformanceStatus = b.Ecog_Value
from #omis l
	join ( SELECT e.Pat_ID1
				,l.groupid
				, e.Create_DtTm
				, e.Ecog_Value
				, ROW_NUMBER() OVER (PARTITION BY e.Pat_ID1,l.groupid ORDER BY e.Create_DtTm DESC) AS RowNum
			FROM  #ecog e 
				join (select pat_id1, groupid, min(EpisodeStartDate) as EpisodeStartDate, case when min(isnull(DateOfDiagnosis,'1900-01-01')) > min(dateadd(yy, -1, EpisodeStartDate)) then min(DateOfDiagnosis) else dateadd(yy, -1, min(EpisodeStartDate)) end as minstartdate from #omis group by pat_id1, groupid) l on l.Pat_ID1 = e.Pat_ID1 and cast(e.Create_DtTm as date) between l.minstartdate and l.EpisodeStartDate
		) b on l.Pat_ID1 = b.Pat_ID1 and b.GroupID = l.GroupID and b.RowNum = 1


update #omis 
set TStageID = ''
where TStageID in ('SCAP', 'BRAIN','ELD','eld b','ELD P','id','IIB','M2','Med','metas','Mid','ox','Plt?','Plt<','su',
	'OUR B','pN0(mol-)','pN0(mol+)','pN1mi','WHOLE','88','-','3 FI','Chronic','e','e3 fi','Plt>','SD',
	'e4 fi','EI','ep','ePOP','ePOST','Int','LAden-','LAden?','LAden+','N,TUM','NB','NEI','31','2-Mar','unk',
	'b2','Blast','BRAI','ELVIS','Ext','hylac','iativ','Int','LCyt-','LCyt?','LCyt+','Ltd','nitiv','o','ULA','NA','N/A','x','NOS')
	
update #omis 
set NStageID = ''
where NStageID in ('SCAP', 'BRAIN','ELD','eld b','ELD P','id','IIB','M2','Med','metas','Mid','ox','Plt?','Plt<','su',
	'OUR B','pN0(mol-)','pN0(mol+)','pN1mi','WHOLE','88','-','3 FI','Chronic','e','e3 fi','Plt>','SD',
	'e4 fi','EI','ep','ePOP','ePOST','Int','LAden-','LAden?','LAden+','N,TUM','NB','NEI','31','2-Mar','unk',
	'b2','Blast','BRAI','ELVIS','Ext','hylac','iativ','Int','LCyt-','LCyt?','LCyt+','Ltd','nitiv','o','ULA','NA','N/A','x','NOS')
	
update #omis 
set MStageID = ''
where MStageID in ('SCAP', 'BRAIN','ELD','eld b','ELD P','id','IIB','M2','Med','metas','Mid','ox','Plt?','Plt<','su',
	'OUR B','pN0(mol-)','pN0(mol+)','pN1mi','WHOLE','88','-','3 FI','Chronic','e','e3 fi','Plt>','SD',
	'e4 fi','EI','ep','ePOP','ePOST','Int','LAden-','LAden?','LAden+','N,TUM','NB','NEI','31','2-Mar','unk',
	'b2','Blast','BRAI','ELVIS','Ext','hylac','iativ','Int','LCyt-','LCyt?','LCyt+','Ltd','nitiv','o','ULA','NA','N/A','x','NOS')

update #omis 
set TStageID = substring(TStageID,1,charindex('T',TStageID,1)-1)+substring(TStageID,charindex('T',TStageID,1)+1,10) 
where TStageID like '%T%'
 
update #omis 
set NStageID = substring(NStageID,1,charindex('N',NStageID,1)-1)+substring(NStageID,charindex('N',NStageID,1)+1,10) 
where NStageID like '%N%'
 
update #omis 
set MStageID = substring(MStageID,1,charindex('M',MStageID,1)-1)+substring(MStageID,charindex('M',MStageID,1)+1,10) 
where MStageID like '%M%'


update #omis 
set TStageID = replace(TStageID , 'NOS','')
where TStageID like '%NOS%'
 
update #omis 
set NStageID = replace(NStageID , 'NOS','')
where NStageID like '%NOS%'
 
update #omis 
set MStageID = replace(MStageID, 'NOS','')
where MStageID like '%NOS%'
 

update #omis 
set TStageID = replace(TStageID , '(DOS)','')
where TStageID like '%(DOS)%'
 
update #omis 
set NStageID = replace(NStageID , '(DOS)','')
where NStageID like '%(DOS)%'
 
update #omis 
set MStageID = replace(MStageID, '(DOS)','')
where MStageID like '%(DOS)%'
 
 
update #omis  -- run it second time for M
set MStageID = ''
where MStageID in ('SCAP', 'BRAIN','ELD','eld b','ELD P','id','IIB','M2','Med','metas','Mid','ox','Plt?','Plt<','su',
	'OUR B','pN0(mol-)','pN0(mol+)','pN1mi','WHOLE','88','-','3 FI','Chronic','e','e3 fi','Plt>','SD',
	'e4 fi','EI','ep','ePOP','ePOST','Int','LAden-','LAden?','LAden+','N,TUM','NB','NEI','31','2-Mar','unk',
	'b2','Blast','BRAI','ELVIS','Ext','hylac','iativ','Int','LCyt-','LCyt?','LCyt+','Ltd','nitiv','o','ULA','NA','N/A','x','X','NOS')


		
update #omis 
set ReferalToPalliativeCareDate = null
where  ReferalToPalliativeCareDate  < coalesce(DateOfDiagnosis,DateOfBirth)  

-- ReferalToPalliativeCareDate
/*update a 
set a.ReferalToPalliativeCareDate = b.Encounter_DtTm
from #omis a
	join (select s.pat_id1, min(s.App_DtTm) as Encounter_DtTm 
		from schedule s	 with (nolock)
			join dbo.Schedule_ScheduleStatus_MTM ssm with (nolock) on s.Sch_ID = ssm.Sch_ID 
			join dbo.ScheduleStatus ss with (nolock) on ssm.ScheduleStatusID = ss.ScheduleStatusID and ss.SystemDefined = 1  and ss.ScheduleStatusID = 9 -- = charge
		--	join (select pat_id1, min(dx_dttm) as dx_dttm from #diagnosedate group by pat_id1) d on d.PAT_ID1 = s.Pat_ID1 and s.App_DtTm >= d.dx_dttm
			join (select pat_id1, min(dx_dttm) as dx_dttm from #diagnosedate group by pat_id1) d on d.PAT_ID1 = s.Pat_ID1 and cast(s.App_DtTm as date) >= d.dx_dttm
		where s.Suppressed =0 
			and s.version = 0
			and s.Activity in (select hsp_code from cpt with (nolock) where Description like '%pal%new%') 
		group by s.pat_id1) b on   a.Pat_ID1 = b.Pat_ID1
		*/

update a
set a.ReferalToPalliativeCareDate = b.Encounter_DtTm
from #omis a 
	join (SELECT o.Pat_ID1, max(o.Encounter_DtTm) as Encounter_DtTm  
		FROM Object o with (nolock)
			--join (select pat_id1, groupid,   min(EpisodeStartDate) as dx_dttm, min(ConsultationDate) as ConsultationDate  from #omis group by pat_id1, groupid) c on o.Pat_ID1 = c.Pat_ID1 and cast(o.Encounter_DtTm as date) <= c.ConsultationDate and cast(o.Encounter_DtTm as date) >= dateadd(mm,-24,c.ConsultationDate) and cast(o.Encounter_DtTm as date) >= dateadd(yy,-1, c.dx_dttm)
		WHERE o.Status_Enum IN (3,5,7,8,9)  
			AND o.Version = 0 
			--and o.doctype = 18  -- internal referrals
			AND o.DocType IN (Select Prompt.Enum FROM Prompt with (nolock) WHERE Prompt.Text IN ('Referral In PallCare')) 
		--	and (o.review_id in (select staff_id from staff with (nolock) where type in ('Inactive','Haematolgist','Haematologist','Med Onc Reg','MedOnc','Haem Reg'))
		--	or o.Cosig_ID in (select staff_id from staff with (nolock) where type in ('Inactive','Haematolgist','Haematologist','Med Onc Reg','MedOnc','Haem Reg')))
		group by o.Pat_ID1) b on a.Pat_ID1 = b.Pat_ID1 
	
	
UPDATE #omis 
set MDTDate = null
where  MDTDate  < coalesce(DateOfDiagnosis,DateOfBirth) 



UPDATE #omis 
set MDTDate = null
where  MDTDate  < coalesce(DateOfDiagnosis,DateOfBirth) 

-- MDTDate
update a 
set a.MDTDate = b.Act_DtTm1
from #omis a
	join (SELECT s.Pat_ID1, d.groupid, max(s.App_DtTm)  AS Act_DtTm1 
		FROM Schedule s with (nolock)
			join dbo.Schedule_ScheduleStatus_MTM ssm with (nolock) on s.Sch_ID = ssm.Sch_ID 
			join dbo.ScheduleStatus ss with (nolock) on ssm.ScheduleStatusID = ss.ScheduleStatusID and ss.SystemDefined = 1  and ss.ScheduleStatusID <> 8 -- not cancel
		--		join (select pat_id1, min(dx_dttm) as dx_dttm from #diagnosedate group by pat_id1) d on d.PAT_ID1 = s.Pat_ID1 and s.App_DtTm >= d.dx_dttm
				join (select pat_id1, groupid, min(DateOfDiagnosis) as dx_dttm, isnull(min(EpisodeStartDate),getdate()) as EpisodeStartDate from #omis group by pat_id1, groupid) d on d.PAT_ID1 = s.Pat_ID1 and cast(s.App_DtTm as date)>= dateadd(dd,-30,d.dx_dttm) and cast(s.App_DtTm as date) <= EpisodeStartDate
		WHERE s.Suppressed =0 
			and s.version = 0
			and s.Activity IN (select hsp_code from cpt with (nolock) where Description like '%mdt%') 
		group by s.Pat_ID1, d.groupid) b on   a.Pat_ID1 = b.Pat_ID1 and a.GroupID = b.GroupID
		

		

-- episode start/end dates 			 
SELECT distinct PatCPlan.PCP_GROUP_ID
	, PatCPlan.PCP_ID
	, PatCPlan.Pat_ID1
	, PatCPlan.End_DtTm
	, PatCPlan.This_Instance
	, PatCPlan.Discontinue_DtTm
	, pharmacy_administration.Adm_DtTm  as Start_dttm
into #episodedates
FROM  dbo.PatCPlan with (nolock)
	INNER JOIN dbo.CPlan with (nolock) ON PatCPlan.CPL_ID = CPlan.CPL_ID 
	INNER JOIN dbo.Orders AS pharm_orders with (nolock) ON PatCPlan.Pat_ID1 = pharm_orders.Pat_ID1 and  pharm_orders.Cycle_Number IS NOT NULL
		AND pharm_orders.Cycle_Day IS NOT NULL 
		AND pharm_orders.PCI_ID IS NOT NULL  
		AND pharm_orders.Version = 0 
		AND pharm_orders.Status_Enum NOT IN (1)
	INNER JOIN dbo.PharmAdm AS pharmacy_administration with (nolock) ON PatCPlan.Pat_ID1 = pharmacy_administration.Pat_ID1 AND pharm_orders.ORC_SET_ID = pharmacy_administration.ORC_SET_ID
		and  pharmacy_administration.Version = 0 
		AND pharmacy_administration.Adm_DtTm IS NOT NULL 
		AND pharmacy_administration.Status_Enum NOT IN (1)
where pharmacy_administration.Adm_DtTm + CPlan.Cycle_Length between @startdate and dateadd(d,1,@enddate)
	or cast(pharmacy_administration.Adm_DtTm as date) between @startdate and dateadd(d,1,@enddate)
	 
select e.PCP_GROUP_ID, e.Pat_ID1, min(coalesce(e.Discontinue_DtTm, e.End_DtTm)) as End_DtTm, min(e.Start_dttm) as Start_dttm
into #episodedates2
from #episodedates e
	join #omis o on o.GroupID = e.PCP_Group_ID and o.Pat_ID1 = e.Pat_ID1 
		and e.Start_dttm >= coalesce(o.ConsultationDate, o.dateofdiagnosis) and coalesce(e.Discontinue_DtTm, e.End_DtTm) <= e.Start_dttm
where cast(e.Start_dttm as date) between @startdate and @enddate
group by e.PCP_GROUP_ID, e.Pat_ID1 
  

delete #episodedates2
where End_DtTm < Start_dttm

update a
set a.EpisodeStartDate = e.Start_dttm, a.EpisodeEndDate = e.End_DtTm
from #omis a
	join #episodedates2 e on a.GroupID = e.PCP_Group_ID and a.Pat_ID1 = e.Pat_ID1
where a.EpisodeStartDate <= coalesce(a.ConsultationDate, ReferralDate, dateofdiagnosis)

update a
set a.EpisodeStartDate = e.Start_dttm, a.EpisodeEndDate = e.End_DtTm
from #omis a
	join #episodedates2 e on a.GroupID = e.PCP_Group_ID and a.Pat_ID1 = e.Pat_ID1
where a.EpisodeStartDate < a.EpisodeEndDate

update #omis
set EpisodeEndDate = null, AntiNeoplasticCycles = null
where EpisodeEndDate > @enddate or EpisodeEndDate = '' or EpisodeEndDate is null
 
update o
set o.DoctorName  = c.OncName, o.AmoRegReferringNumber = c.OncAHPRA
from #omis o
	join #consultation c on o.Pat_ID1 = c.Pat_ID1  and o.groupID = c.groupID 
where  o.DoctorName is null or o.DoctorName = '' or o.DoctorName  in ('--- ---','ONCOLOGIST MEDICAL') 

--Fallback to replace TreatingFacility Code/Facility Code when blank.		
UPDATE #omis 
set TreatingFacilityCode = 'B202'
where  TreatingFacilityCode  IS NULL or TreatingFacilityCode  =''

UPDATE #omis 
set FacilityCode = 'B095'
where  FacilityCode  IS NULL or FacilityCode  =''

--Select * From #omis
 
if object_id('tempdb..#omis_final') is not null
 drop table #omis_final

select distinct	cast(GroupID  as varchar(20)) as GroupID
	,	cast(MedicareNumber as varchar(20)) as MedicareNumber
	,	cast(MRN as varchar(20)) as MRN
	,	cast([UniqueIdentifier] as varchar(20)) as [UniqueIdentifier]
	,	cast(GivenName1 as varchar(50)) as GivenName1
	,	cast(GivenName2 as varchar(50)) as GivenName2
	,	cast(Surname as varchar(50)) as Surname
	,	cast(AliasSurname as varchar(50)) as AliasSurname 
	,	Sex
	,	DateOfBirth
	,	Birth_Place_original
	,	COBCodeSACC
	,	WayfareAddress
	,	Locality
	,	Postcode
	,	WayfareStateID_original
	,	WayfareStateID
	,	IndigenousStatusID_original
	,	IndigenousStatusID
	,	AmoRegReferringNumber
	,	DoctorName
	,	TreatingFacilityCode
	,	FacilityCode
	,	DateOfDiagnosis
	,	CancerSiteCodeID
	,	CancerSiteCodeIDVersion
	,   MorphologyCodeIDVersion
	,	BestBasisOfDiagnosisID_original
	,	BestBasisOfDiagnosisID
	,	Laterality_original
	,	Laterality
	,	HistopathologicalGradeID
	,	MorphologyCodeID
	,	DegreeOfSpreadID
	,	TNMStagingDate
	,	TStageID_original
	,	NStageID_original
	,	MStageID_original
	,	TStageID
	,	NStageID
	,	MStageID
	,	TNMStagingGroupID
	,	TNMStagingBasisID
	,	OtherStagingDate
	,	OtherStagingSchemeID
	,	OtherStagingGroupID
	,	OtherStagingBasisID
	,	EpisodeIntentID_original
	,	EpisodeIntentID
	,	InitialTreatmentFlag
	,	EpisodeStartDate
	,	EpisodeEndDate
	,	AntiNeoplasticCycles
	,	Case WHEN UPPER(ProtocolID)  LIKE 'EVIQ%' THEN LTRIM(Replace(ProtocolID, 'EVIQ', '')) ELSE '1570' END	as ProtocolID
	,	NotificationEpisodeChemoCycle
	,	OMISDrugName
	,	NotificationEpisodeChemoDose
	,	NotificationEpisodeChemoRouteID_original
	,	NotificationEpisodeChemoRouteID
	,	NotificationEpisodeChemoStartDate
	,	NotificationEpisodeChemoEndDate
	,	NotificationEpisodeChemoFrequency
	,	NotificationEpisodeChemoFrequencyUnit
	,	NotificationEpisodeChemoDay
	,	ReferralDate
	,	ConsultationDate
	,	ClinicalTrialDate
	,	ClinicalTrialName
	,	MDTDate
	,	ReferalToPalliativeCareDate 
	,	PerformanceStatusDate
	,	PerformanceStatus
	,	CPL_ID
	,	CPlan_Name
	,	Regimen
	,	cycle_length
	,	last_cycle_number
	,	plan_status
	,	adm_status
	,	last_admin_date
	,	calculated_end_date
	,   dx_record_Create_DtTm
	,   dx_record_Sanct_DtTm
	,   dx_record_Edit_DtTm
into #omis_final
from #omis 
Where 1=1
AND OMISDrugName is not null
/*
where NOT(UPPER(ProtocolID)  LIKE 'EVIQ%') and OMISDrugName is not null --and cpl_id not in (select code from @custom_careplan_remap where name <> '1570')
	--and HospitalCode = @hospital
union all
select distinct	cast(GroupID  as varchar(20))
	,	cast(MedicareNumber as varchar(20))
	,	cast(MRN as varchar(20))
	,	cast([UniqueIdentifier] as varchar(20))
	,	cast(GivenName1 as varchar(50))
	,	cast(GivenName2 as varchar(50))
	,	cast(Surname as varchar(50))
	,	cast(AliasSurname as varchar(50))
	,	Sex
	,	DateOfBirth
	,	Birth_Place_original
	,	COBCodeSACC
	,	WayfareAddress
	,	Locality
	,	Postcode
	,	WayfareStateID_original
	,	WayfareStateID
	,	IndigenousStatusID_original
	,	IndigenousStatusID
	,	AmoRegReferringNumber
	,	DoctorName
	,	TreatingFacilityCode
	,	FacilityCode
	,	DateOfDiagnosis
	,	CancerSiteCodeID
	,	CancerSiteCodeIDVersion
	,   MorphologyCodeIDVersion
	,	BestBasisOfDiagnosisID_original
	,	BestBasisOfDiagnosisID
	,	Laterality_original
	,	Laterality
	,	HistopathologicalGradeID
	,	MorphologyCodeID
	,	DegreeOfSpreadID
	,	TNMStagingDate
	,	TStageID_original
	,	NStageID_original
	,	MStageID_original
	,	TStageID
	,	NStageID
	,	MStageID
	,	TNMStagingGroupID
	,	TNMStagingBasisID
	,	OtherStagingDate
	,	OtherStagingSchemeID
	,	OtherStagingGroupID
	,	OtherStagingBasisID
	,	EpisodeIntentID_original
	,	EpisodeIntentID
	,	InitialTreatmentFlag
	,	EpisodeStartDate
	,	EpisodeEndDate
	,	AntiNeoplasticCycles
	,	Replace(ProtocolID, 'EVIQ ', '')
	,	null as NotificationEpisodeChemoCycle
	,	null as OMISDrugName
	,	null as NotificationEpisodeChemoDose
	,	null as NotificationEpisodeChemoRouteID_original
	,	null as NotificationEpisodeChemoRouteID
	,	null as NotificationEpisodeChemoStartDate
	,	null as NotificationEpisodeChemoEndDate
	,	null as NotificationEpisodeChemoFrequency
	,	null as NotificationEpisodeChemoFrequencyUnit
	,	null as NotificationEpisodeChemoDay
	,	ReferralDate
	,	ConsultationDate
	,	ClinicalTrialDate
	,	ClinicalTrialName
	,	MDTDate
	,	ReferalToPalliativeCareDate
	,	PerformanceStatusDate
	,	PerformanceStatus
	,	CPL_ID
	,	CPlan_Name
	,	Regimen
	,	cycle_length
	,	last_cycle_number
	,	plan_status
	,	adm_status
	,	last_admin_date
	,	calculated_end_date
	,   dx_record_Create_DtTm
	,   dx_record_Sanct_DtTm
	,   dx_record_Edit_DtTm
from #omis 
where UPPER(ProtocolID) LIKE 'EVIQ%' 
	--and HospitalCode = @hospital  
	

*/




--Final Query selected #omis_final
( 
select distinct isnull(cast(GroupID  as varchar(11)),'') as GroupID 
	, isnull(cast(MedicareNumber  as varchar(12)),'') as MedicareNumber 
	, isnull(cast(MRN  as varchar(20)),'') as MRN 
	, isnull(cast([UniqueIdentifier]  as varchar(20)),'') as [UniqueIdentifier] 
	, isnull(cast(GivenName1  as varchar(40)),'') as GivenName1 
	, isnull(cast(GivenName2  as varchar(40)),'') as GivenName2 
	, isnull(cast(Surname  as varchar(40)),'') as Surname 
	, isnull(cast(AliasSurname  as varchar(40)),'') as AliasSurname 
	, isnull(cast(Sex as varchar(1)),'') as Sex
	, isnull(replace(right('0'+convert(varchar(10),DateOfBirth, 103),10),'/',''),'') as DateOfBirth
	--, isnull(cast(Birth_Place_original as varchar(30)),'') as Birth_Place_original
	, isnull(cast(COBCodeSACC as varchar(4)),'') as COBCodeSACC
	, isnull(cast(WayfareAddress as varchar(180)),'') as WayfareAddress
	, isnull(cast(Locality as varchar(40)),'') as Locality
	, isnull(cast(Postcode as varchar(4)),'') as Postcode
	--, isnull(cast(WayfareStateID_original as varchar(30)),'') as WayfareStateID_original
	, isnull(cast(WayfareStateID as varchar(2)),'') as WayfareStateID
	--, isnull(cast(IndigenousStatusID_original as varchar(30)),'') as IndigenousStatusID_original
	, isnull(cast(IndigenousStatusID as varchar(1)),'') as IndigenousStatusID
	, isnull(cast(AmoRegReferringNumber as varchar(20)),'') as AmoRegReferringNumber
	, isnull(cast(DoctorName as varchar(120)),'') as DoctorName
	, isnull(cast(TreatingFacilityCode as varchar(4)),'') as TreatingFacilityCode
	, isnull(left(cast(FacilityCode as varchar(30)),4),'') as FacilityCode
	, isnull(replace(right('0'+convert(varchar(10),DateOfDiagnosis, 103),10),'/',''),'01019999') as DateOfDiagnosis
	, isnull(cast(CancerSiteCodeID as varchar(7)),'') as CancerSiteCodeID
	, isnull(cast(CancerSiteCodeIDVersion as varchar(10)),'') as CancerSiteCodeIDVersion
	--, isnull(cast(BestBasisOfDiagnosisID_original as varchar(30)),'') as BestBasisOfDiagnosisID_original
	, isnull(cast(BestBasisOfDiagnosisID as varchar(1)),9) as BestBasisOfDiagnosisID
	--, isnull(cast(Laterality_original as varchar(30)),'') as Laterality_original
	, isnull(cast(Laterality as varchar(1)),'') as Laterality
	, isnull(cast(HistopathologicalGradeID as varchar(1)),'') as HistopathologicalGradeID
	, isnull(cast(cast(MorphologyCodeID as int) as varchar(10)),'') as MorphologyCodeID
	, isnull(cast(MorphologyCodeIDVersion as varchar(10)),'') as MorphologyCodeIDVersion
	, isnull(cast(DegreeOfSpreadID as varchar(1)),'') as DegreeOfSpreadID
	, isnull(replace(right('0'+convert(varchar(10),TNMStagingDate, 103),10),'/',''),'') as TNMStagingDate
	, isnull(cast(TStageID as varchar(50)),'') as TStageID
	, isnull(cast(NStageID AS varchar(50)),'') as NStageID
	, isnull(cast(MStageID as varchar(50)),'') as MStageID
	, isnull(cast(TNMStagingGroupID as varchar(50)),'') as TNMStagingGroupID
	, isnull(cast(TNMStagingBasisID as varchar(1)),'') as TNMStagingBasisID
	, isnull(replace(right('0'+convert(varchar(10),OtherStagingDate, 103),10),'/',''),'') as OtherStagingDate 
	, isnull(cast(OtherStagingSchemeID as varchar(2)),'') as OtherStagingSchemeID
	, isnull(cast(OtherStagingGroupID as varchar(14)),'') as OtherStagingGroupID
	, isnull(cast(OtherStagingBasisID as varchar(1)),'') as OtherStagingBasisID
	--, isnull(cast(EpisodeIntentID_original as varchar(30)),'') as EpisodeIntentID_original
	, isnull(cast(EpisodeIntentID as varchar(2)),'') as EpisodeIntentID
	, isnull(cast(InitialTreatmentFlag as varchar(1)),'') as InitialTreatmentFlag 
	, isnull(replace(right('0'+convert(varchar(10),EpisodeStartDate, 103),10),'/',''),'') as EpisodeStartDate
	, isnull(replace(right('0'+convert(varchar(10),EpisodeEndDate, 103),10),'/',''),'') as EpisodeEndDate
	, isnull(cast(AntiNeoplasticCycles as varchar(3)),'') as AntiNeoplasticCycles
	, isnull(cast(ProtocolID as varchar(15)),'') as ProtocolID
	, isnull(cast(NotificationEpisodeChemoCycle as varchar(3)),'') as NotificationEpisodeChemoCycle
	, isnull(cast(OMISDrugName as varchar(512)),'') as OMISDrugName
	, isnull(cast(NotificationEpisodeChemoDose as varchar(20)),'') as NotificationEpisodeChemoDose
	--, isnull(cast(NotificationEpisodeChemoRouteID_original as varchar(30)),'') as NotificationEpisodeChemoRouteID_original
	, isnull(cast(NotificationEpisodeChemoRouteID as varchar(2)),'') as NotificationEpisodeChemoRouteID
	, isnull(replace(right('0'+convert(varchar(10),NotificationEpisodeChemoStartDate, 103),10),'/',''),'') as NotificationEpisodeChemoStartDate
	, isnull(replace(right('0'+convert(varchar(10),NotificationEpisodeChemoEndDate, 103),10),'/',''),'') as NotificationEpisodeChemoEndDate
	, isnull(cast(NotificationEpisodeChemoFrequency as varchar(2)),'') as NotificationEpisodeChemoFrequency
	, isnull(cast(NotificationEpisodeChemoFrequencyUnit as varchar(1)),'') as NotificationEpisodeChemoFrequencyUnit
	, isnull(cast(NotificationEpisodeChemoDay as varchar(15)),'') as NotificationEpisodeChemoDay
	, isnull(replace(right('0'+convert(varchar(10),ReferralDate, 103),10),'/',''),'') as ReferralDate
	, isnull(replace(right('0'+convert(varchar(10),ConsultationDate , 103),10),'/',''),'') as ConsultationDate
	, isnull(replace(right('0'+convert(varchar(10),ClinicalTrialDate, 103),10),'/',''),'') as ClinicalTrialDate
	, isnull(cast(ClinicalTrialName as varchar(100)),'') as ClinicalTrialName
	, isnull(replace(right('0'+convert(varchar(10),MDTDate, 103),10),'/',''),'') as MDTDate
	, isnull(replace(right('0'+convert(varchar(10),ReferalToPalliativeCareDate , 103),10),'/',''),'') as ReferralToPalliativeCareDate
	, isnull(replace(right('0'+convert(varchar(10),PerformanceStatusDate, 103),10),'/',''),'') as PerformanceStatusDate
	, isnull(cast(PerformanceStatus as varchar(1)),'') as PerformanceStatus 
from #omis_final  )


-- SELECT * FROM #omis
-- select * from #omis where GroupId = 6838
-- select * from #omis where GroupId = 10812
-- select * from #omis_final  where GivenName1 like 'ste%' and Surname like 'abb%'
 --select * from #omis_final where ClinicalTrialName = ''